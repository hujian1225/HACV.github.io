(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{255:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h3",{attrs:{id:"第5章-项目实战与总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第5章-项目实战与总结"}},[t._v("#")]),t._v(" 第5章-项目实战与总结")]),t._v(" "),s("h3",{attrs:{id:"_5-1-阻塞和非阻塞、同步和异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-阻塞和非阻塞、同步和异步"}},[t._v("#")]),t._v(" 5.1-阻塞和非阻塞、同步和异步")]),t._v(" "),s("h3",{attrs:{id:"_5-2-unix、linux上的五种io模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-unix、linux上的五种io模型"}},[t._v("#")]),t._v(" 5.2-Unix、Linux上的五种IO模型")]),t._v(" "),s("h3",{attrs:{id:"_5-3-web服务器简介及http协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-web服务器简介及http协议"}},[t._v("#")]),t._v(" 5.3-Web服务器简介及HTTP协议")]),t._v(" "),s("h3",{attrs:{id:"_5-4-服务器编程基本框架和两种高效的事件处理模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-服务器编程基本框架和两种高效的事件处理模式"}},[t._v("#")]),t._v(" 5.4-服务器编程基本框架和两种高效的事件处理模式")]),t._v(" "),s("h3",{attrs:{id:"_5-5-线程同步机制类封装及线程池实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-线程同步机制类封装及线程池实现"}},[t._v("#")]),t._v(" 5.5-线程同步机制类封装及线程池实现")]),t._v(" "),s("h3",{attrs:{id:"_5-6-项目整体流程代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-项目整体流程代码实现"}},[t._v("#")]),t._v(" 5.6-项目整体流程代码实现")]),t._v(" "),s("h3",{attrs:{id:"_5-7-解析http请求报文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-解析http请求报文"}},[t._v("#")]),t._v(" 5.7-解析HTTP请求报文")]),t._v(" "),s("h3",{attrs:{id:"_5-8-解析请求完成及生成响应信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-解析请求完成及生成响应信息"}},[t._v("#")]),t._v(" 5.8-解析请求完成及生成响应信息")]),t._v(" "),s("h3",{attrs:{id:"_5-9-定时检测非活跃连接、服务器压力测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-定时检测非活跃连接、服务器压力测试"}},[t._v("#")]),t._v(" 5.9-定时检测非活跃连接、服务器压力测试")])])}],!1,null,null,null);a.default=e.exports}}]);