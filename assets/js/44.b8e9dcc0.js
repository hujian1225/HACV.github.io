(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{217:function(_,v,t){"use strict";t.r(v);var a=t(0),e=Object(a.a)({},(function(){var _=this.$createElement;this._self._c;return this._m(0)}),[function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"_01-语言分类方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01-语言分类方法"}},[_._v("#")]),_._v(" 01.语言分类方法")]),_._v(" "),t("h2",{attrs:{id:"_01-动态-静态语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01-动态-静态语言"}},[_._v("#")]),_._v(" 01.动态/静态语言")]),_._v(" "),t("blockquote",[t("p",[_._v("动态语言")])]),_._v(" "),t("p",[_._v("是一类在运行时可以改变其结构的语言:例如新的函数、对象、甚至代码可以被引进，已有的函数可以被删除或是其他结构上的变化。通俗点说就是在运行时代码可以根据某些条件改变自身结构。")]),_._v(" "),t("ul",[t("li",[_._v("主要动态语言:"),t("code",[_._v("Object-C")]),_._v("、"),t("code",[_._v("C#")]),_._v("、"),t("code",[_._v("JavaScript")]),_._v("、"),t("code",[_._v("PHP")]),_._v("、"),t("code",[_._v("Python")]),_._v("等。")])]),_._v(" "),t("blockquote",[t("p",[_._v("静态语言")])]),_._v(" "),t("p",[_._v("与动态语言相对应的，运行时结构不可变的语言就是静态语言。如"),t("code",[_._v("Java")]),_._v("、"),t("code",[_._v("C")]),_._v("、"),t("code",[_._v("C++")]),_._v("。\nJava不是动态语言，但Java可以称之为“"),t("strong",[_._v("准动态语言")]),_._v("”。即Java有一定的动态性，我们可以利用反射机制获得类似动态语言的特性。Java的动态性让编程的时候更加灵活!")]),_._v(" "),t("h2",{attrs:{id:"_02-强类型-弱类型语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_02-强类型-弱类型语言"}},[_._v("#")]),_._v(" 02.强类型/弱类型语言")]),_._v(" "),t("blockquote",[t("p",[_._v("强类型语言？")])]),_._v(" "),t("ul",[t("li",[_._v("要求变量的使用要严格符合规定，所有变量都必须先定义后才能使用")])]),_._v(" "),t("blockquote",[t("p",[_._v("弱类型语言？")])]),_._v(" "),t("h2",{attrs:{id:"_03-判断：类型安全语言？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_03-判断：类型安全语言？"}},[_._v("#")]),_._v(" 03.判断：类型安全语言？")]),_._v(" "),t("ul",[t("li",[_._v("C++"),t("strong",[_._v("不是")]),_._v("类型安全的")]),_._v(" "),t("li",[_._v("在C++中允许不同类型指针之间进行强制转换（"),t("code",[_._v("C#")]),_._v("是类型安全的）")])])])}],!1,null,null,null);v.default=e.exports}}]);