(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{255:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("ul",[n("li",[t._v("01.转载"),n("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5NTY1MjY0MQ==&mid=2650753100&idx=4&sn=10fb278995426d9c5bcc07309d39c6f1&chksm=befedd0289895414c5e3b3ed0a952d3a0438e15e85e992129773b349b8e8f9b8590c6fc9167a&mpshare=1&scene=23&srcid=1005yjd59tg3vG08SxTS9Rnm&sharer_sharetime=1601910589841&sharer_shareid=7d02bdfe8ee477ab2b773f2df63f3163#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门（PS：此文章中有错误的地方，下面自行改正了）"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("02.CSDN官方转载，"),n("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5MjAwODM4MA==&mid=2650793413&idx=3&sn=c0f6071b066b36440987dcbca4a64a91&chksm=bea7941689d01d00c5a53fb09fdb22ff14d056534bbec112d10847f3c3562bb81a3bdcb5ebd9&mpshare=1&scene=23&srcid=03070oITnw7pdgZ3yeCUirqz&sharer_sharetime=1615116737628&sharer_shareid=7d02bdfe8ee477ab2b773f2df63f3163#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("技术让梦想更伟大"),n("OutboundLink")],1),t._v("『很不错』")]),t._v(" "),n("li",[n("font",{staticStyle:{background:"yellow"}},[t._v("记忆下面的核心：已知"),n("code",[t._v("#pragma pack(n)就能全部解决")])]),t._v(" "),n("ul",[t._m(2),t._v(" "),n("li",[t._v("2、3.结构体总大小为最大对齐数的整数倍"),n("font",{staticStyle:{background:"yellow"}},[t._v("（max（各个成员变量的"),n("strong",[t._v("由（规则2）获得的对齐数大小")]),t._v("））")]),t._v("\n（每个成员变量都有自己的对齐数）『是的，这个才是核心！后边我对有个测试的判断，写错了』")],1),t._v(" "),t._m(3),t._v(" "),n("li",[t._v("注意："),n("font",{staticStyle:{background:"yellow"}},[t._v("讲字节对齐的时候，不告知CPU位数和操作系统和编译器位数就是耍流氓！")])],1)])],1)]),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("原因:"),n("font",{attrs:{color:"red"}},[t._v("现代的计算机中，有一个内存对齐的要求")])],1),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),n("p",[t._v("此处肯定有疑惑")]),t._v(" "),t._m(10),n("p",[t._v("总的来说，内存对齐一般是由于以下原因：")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),n("ul",[n("li",[t._m(15),t._v(" "),n("ul",[t._m(16),t._v(" "),n("li",[n("font",{staticStyle:{background:"yellow"}},[t._v("而"),n("code",[t._v("在C和C++中，int可能是16位整数、32位整数、也可能是『编译器提供商』指定的其他大小")]),t._v("。唯一的限制只是：int类型的大小不低于"),n("code",[t._v("short int")]),t._v("，并且不能高于"),n("code",[t._v("long int")])])],1),t._v(" "),n("li",[t._v("在Java中，数据类型具有固定的大小、这消除了代码移植时令人头痛的问题。")])])])]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),n("p",[t._v("例题5：（分析下面在32位编译环境的程序）")]),t._v(" "),t._m(22),t._m(23),t._v(" "),n("ul",[t._m(24),t._v(" "),n("li",[n("p",[n("font",{staticStyle:{background:"yellow"}},[t._v("不同平台上"),n("strong",[t._v("编译器")]),t._v("的 "),n("code",[t._v("pragma pack")]),t._v(" 默认值不同。而我们可以通过预编译命令"),n("code",[t._v("#pragma pack(n)")]),t._v(", n= 1,2,4,8,16来改变对齐系数。")])],1),t._v(" "),t._m(25)]),t._v(" "),n("li",[n("p",[n("font",{staticStyle:{background:"yellow"}},[t._v("一般"),n("strong",[t._v("内存块")]),t._v("对齐方式『核心之一』：")])],1),t._v(" "),t._m(26)])]),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),n("ul",[t._m(29),t._v(" "),t._m(30),t._v(" "),n("li",[t._m(31),t._v(" "),n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"}},[t._v("『坑点：比如"),n("code",[t._v("int在16位的编译器上是sizeof(int)=2")]),t._v("』")])],1)])]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37)]),t._v(" "),t._m(38),t._v(" "),n("ul",[t._m(39),t._v(" "),n("li",[n("p",[t._v("以『"),n("strong",[t._v("结构体")]),t._v("』为例就是在自然对齐后，编译器将对『自然对齐』产生的『空隙内存』填充无效数据，且填充后结构体占"),n("strong",[t._v("内存空间")]),t._v("为结构"),n("strong",[t._v("体内")]),t._v("占内存空间"),n("font",{staticStyle:{background:"yellow"}},[t._v("最大的数据类型成员变量")]),t._v("的整数倍。")],1)])]),t._v(" "),t._m(40),t._v(" "),n("ul",[n("li",[t._v("我们知道32位处理器一次只能处理32位也就是4个字节的数据，而 double 是8字节数据类型，这要怎么处理呢？")]),t._v(" "),n("li",[t._v("『如果是"),n("strong",[t._v("64位处理器")]),t._v("，8字节数据可以一次处理完毕』，而在32位处理器下，为了也能处理 double8 字节数据，在处理的时候将"),n("strong",[t._v("会把 double "),n("font",{staticStyle:{background:"yellow"}},[t._v("拆分")]),t._v("成两个4字节数进行处理")],1),t._v("，从这里就会出现一种情况如下：")])]),t._v(" "),t._m(41),t._m(42),t._v(" "),n("p",[t._v("测试代码如下：环境『Linux64位』")]),t._v(" "),t._m(43),n("p",[t._v("更改字节对齐之后『反向知晓，"),n("font",{staticStyle:{background:"yellow"}},[t._v("64位Linux的g++默认对齐数是8字节")]),t._v("』")],1),t._v(" "),t._m(44),n("blockquote",[n("p",[t._v("我的猜想：")]),t._v(" "),n("p",[t._v("1、默认字节对齐的本质：CPU一次性寻址的字节长度")]),t._v(" "),n("p",[t._v("2、自然对齐中min(默认的对齐数，这个基本类型的字节数)『设置4字节对齐之后，看到了，本猜想正确』")]),t._v(" "),n("p",[t._v("3、本次测试，好像推翻了『规则对齐。。。。")]),t._v(" "),n("p",[t._v("规则对齐改为？？规则对齐，取我们实际上》》》》。。。不清楚")]),t._v(" "),n("p",[t._v("我觉得可这么想，由于min(4，double)获得的是4，所以在自然对齐的时候，我们被迫将double分成两半")]),t._v(" "),n("p",[t._v("然后，规则对齐的时候，虽然结构体中最大显然是8，应该是8的倍数，但是被『编译器优化了』觉得后面的『补充不需要了，所以，才采取的12，而不是16，")]),t._v(" "),n("p",[t._v("进一步猜测："),n("font",{staticStyle:{background:"yellow"}},[t._v("补全空格，只补充中间的，不补充最末尾的？『这个猜想，和下面的黄色部分，我觉得是对的，模型建立完毕』")])],1)]),t._v(" "),n("p",[t._v("修正知道：对齐长度『长于』struct中的类型长度『最长』的值时,设置的对齐长度等于无用")]),t._v(" "),n("ul",[n("li",[n("p",[n("font",{staticStyle:{background:"yellow"}},[t._v("故当我们将 #pragma pack 的n值小于『所有数据成员长度』的时候，结果将改变。")])],1)]),t._v(" "),t._m(45)]),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),n("ul",[t._m(53),t._v(" "),n("li",[t._v("2.其他"),n("b",[t._v("成员变量")]),t._v("要对齐到某个数字（对齐数）的整数倍的地址处。对齐数为『编译器默认的对齐数』与该成员大小中的较小值"),n("font",{staticStyle:{background:"yellow"}},[t._v("（min（编译器默认对齐数，成员变量大小））")]),t._v("。『自然对齐，审核正确』")],1),t._v(" "),n("li",[n("font",{staticStyle:{background:"yellow"}},[t._v("Linux中gcc和g++编译器，32位默认对齐数是4字节对齐。64位默认字节对齐数是8字节对齐。")]),t._v("（后续有证明，注意，参考的“脚本之家”那个有误）此外默认对齐数可以通过#pragma pack（）修改，但修改只能设置成1，2，4，8，16。")],1)]),t._v(" "),t._m(54),t._v(" "),n("ul",[n("li",[t._v("3."),n("b",[t._v("结构体总大小")]),t._v("为最大对齐数的整数倍"),n("font",{staticStyle:{background:"yellow"}},[t._v("（max（各个成员变量的由（规则2）获得的对齐数大小））")]),t._v("。（每个成员变量都有自己的对齐数）『规则对齐，应该错误，应该不是由规则2获得的，而是直接所以成员变量』")],1),t._v(" "),t._m(55)]),t._v(" "),n("blockquote",[n("p",[t._v("其他：可借助，"),n("font",{staticStyle:{background:"yellow"}},[t._v("C语言头文件中"),n("code",[t._v("#include<stddef.h>")]),t._v("中函数"),n("code",[t._v("offsetof")]),t._v("观察现象")])],1)]),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),n("p",[t._v("测试")]),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._m(65),t._v(" "),t._m(66),n("ul",[n("li",[t._v("结构体的最终大小必须是结构体最大简单类型的整数倍？？？")]),t._v(" "),n("li",[t._v("A：2021年7.12解释：")]),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),n("li",[n("font",{staticStyle:{background:"yellow"}},[t._v("CPU的位数很重要，或许决定了"),n("code",[t._v("#pragma pack()")]),t._v("的数字")])],1)]),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),n("p",[t._v("C语言中的"),n("code",[t._v("_Alignof")]),t._v("的"),n("a",{attrs:{href:"https://cloud.tencent.com/developer/section/1009082",target:"_blank",rel:"noopener noreferrer"}},[t._v("对齐"),n("OutboundLink")],1)]),t._v(" "),t._m(71),t._v(" "),t._m(72),t._m(73),t._v(" "),t._m(74),t._m(75),t._v(" "),t._m(76),t._v(" "),t._m(77),t._v(" "),n("ul",[n("li",[t._v("参考例题"),n("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/ac4a46ee80b84313bb95307887ffb6c1",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),n("OutboundLink")],1)])]),t._v(" "),t._m(78),n("p",[t._v("解释：")]),t._v(" "),n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"}},[t._v("由于"),n("strong",[t._v("可移植性")]),t._v("导致："),n("code",[t._v("16位")]),t._v("的机器上默认是"),n("strong",[t._v("2字节对齐『"),n("code",[t._v("#pragma pack(2)")]),t._v("』")]),t._v("！那么该种机器中"),n("code",[t._v("int")]),t._v("只用2Byte")]),t._v("，并不是什么int 在16位上要拆分为2个short的???『好像也不对，因为用后面的也能解释是2,！！！，但是《C++Primer》规定int最小是可以有16位』")],1),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),t._m(82)]),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),n("p",[t._v("64位gcc下输出")]),t._v(" "),t._m(86),n("p",[t._v("解释16原因：")]),t._v(" "),n("ul",[t._m(87),t._v(" "),n("li",[n("p",[n("font",{staticStyle:{background:"yellow"}},[n("strong",[t._v("坑点")]),t._v("：union 没有初始化，但是struct中还有其他成员，我们就可以不用给它分配空间来占位置『如果只有它，我们需要1来占位』")])],1)]),t._v(" "),t._m(88),t._v(" "),t._m(89),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92)]),t._v(" "),n("p",[t._v("解释24的原因：")]),t._v(" "),t._m(93),t._v(" "),t._m(94),t._v(" "),t._m(95),t._v(" "),t._m(96),t._v(" "),t._m(97),t._v(" "),t._m(98),n("ul",[n("li",[t._v("测试环境32位CPU")]),t._v(" "),n("li",[t._v("『例子很好』题目"),n("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/412ee424b496435095eafc8918ec0b56?orderByHotValue=1&page=1&onlyReference=false",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),n("OutboundLink")],1)])]),t._v(" "),t._m(99),n("p",[t._v("解释：")]),t._v(" "),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._v(" "),t._m(103),t._m(104),t._v(" "),t._m(105),t._v(" "),t._m(106),t._v(" "),n("ul",[n("li",[t._v("题目"),n("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/8f3ce8a749f34ae59b2f0efc46d3ace9",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送口"),n("OutboundLink")],1)])]),t._v(" "),t._m(107),n("ul",[t._m(108),t._v(" "),n("li",[n("p",[n("font",{staticStyle:{background:"yellow"}},[t._v("因为是64位环境下，所以默认对齐方式是8字节为一个内存块")])],1)])]),t._v(" "),t._m(109),t._v(" "),t._m(110),t._v(" "),t._m(111)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"内存对齐『核对版』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存对齐『核对版』"}},[this._v("#")]),this._v(" 内存对齐『核对版』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_00-参考资料『记忆』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_00-参考资料『记忆』⭐️"}},[this._v("#")]),this._v(" 00.参考资料『记忆』⭐️")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("1』32位编译器"),s("code",[this._v("#pragma pack(4)")]),this._v("，64位编译"),s("code",[this._v("#pragma pack(8)")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("li",[t._v("比如理解就是\n"),n("ul",[n("li",[n("code",[t._v("int")]),t._v("类型在"),n("code",[t._v("16")]),t._v("位机器上，是2个字节和2个字节『而不是4个字节』")]),t._v(" "),n("li",[n("code",[t._v("double")]),t._v("在"),n("code",[t._v("32")]),t._v("位机器上，是4个字节和4个字节『而不是8个字节』")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_01-内存对齐前述❎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_01-内存对齐前述❎"}},[this._v("#")]),this._v(" 01.内存对齐前述❎")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("b",[this._v("PS：现代计算机中内存空间都是按照字节划分的，所以图示中一个黑色的长条代表一个字节。 ")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("例:有些平台"),s("b",[this._v("每次读都是从偶地址")]),this._v("开始的  『笔者认为，也可以是从2的倍数，从4的倍数，8的倍数开始。。\n如果一个int型（假设为32位系统）"),s("br"),this._v("\n1）如果他存放在"),s("b",[this._v("偶地址")]),this._v("开始的地方，那么一个CPU读的周期，就可以读出这个32bit的int")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/2020_06_08_1.png",alt:"2020_06_08_1"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("2）如果他存放在"),s("b",[this._v("奇地址")]),this._v("开始的地方，那么我们要是想要读取，蓝色的部分的int，我们的CPU需要读两个红色的框框。在第一个4字节块,剔除不想要的字节（0地址）,然后从地址4开始读取下一个4字节块,同样剔除不要的数据（5，6，7地址）,最后将留下的两块数据合并放入寄存器。也就是说这种情况CPU需要2个读周期，并且对两次读出的结果的高低字节进行拼凑才能得到这个32位bit的数据。"),s("br"),this._v("\n很显然，这个在读取的效率上下降了很多。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/2020_06_08_2.png",alt:"2020_06_08_2"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("- Q:难道就不能直接从那个奇地址开始读吗？    \n- A:理论上讲，我们对任何类型的变量的访问可以从任何奇或者偶地址开始，这样是可以的。\n但是，我们的硬件在设计的时候，CPU的底层访问实现的似乎就是这个，每次从偶地址开始读取。\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("1）"),n("b",[t._v("平台原因（移植原因）")]),t._v("：不是所有的硬件平台都能访问任意地址上的任意数据的；某些硬件平台只能在某些地址处取某些特定类型的数据，否则抛出硬件异常。（有的硬件的设计就是只支持从偶地址开始访问的）")]),t._v(" "),n("li",[t._v("2）"),n("b",[t._v("性能原因（根本原因）")]),t._v("：数据结构(尤其是栈)应该尽可能地在自然边界上对齐。原因在于，为了访问未对齐的内存，处理器需要作两次内存访问（前面我们的例子就是这样）；而对齐的内存访问仅需要一次访问。")]),t._v(" "),n("li",[t._v("我们要提高CPU访问内存数据的"),n("b",[t._v("效率")]),t._v("的问题。")]),t._v(" "),n("li",[t._v("计算机访问内存一般是以内存块为单位的，块的大小是地址对齐的。如4,8,16字节对齐等。")]),t._v(" "),n("li",[t._v("一般来说对齐是跟CPU位数及CPU特性有关的，具体的比如X86-64支持1,2,4,8字节对齐.所以里面的讲的对齐主要还是取决于C语言中数据类型的大小。\nPS："),n("b",[t._v("对齐值必须是2的幂次方")]),t._v("，如1，2，4，8，16。如果一个变量按n字节对齐，那么该变量的起始地址必须是n的倍数。\n每个"),n("b",[t._v("特定平台")]),t._v("上的编译器都有自己默认的“对齐系数”，可以通过设置"),n("code",[t._v("#pragma pack(n)")]),t._v("告诉编译器，是n字节对齐。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1-1-是否可以强制不内存对齐？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-是否可以强制不内存对齐？"}},[this._v("#")]),this._v(" 1.1.是否可以强制不内存对齐？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("笔者觉得可以，但是那样会导致CPU效率降低")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_02-前置知识—可移植性『基本类型的对齐数』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02-前置知识—可移植性『基本类型的对齐数』"}},[this._v("#")]),this._v(" 02.前置知识—可移植性『基本类型的对齐数』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("《Java核心技术卷1》说道："),s("strong",[this._v("与C和C++不同，Java规范中没有“依赖具体实现”的地方")]),this._v("！基本数据类型大小以及有关运算都做了明确的说明！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("Java中int永远是32位的整数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-1-记忆『核心』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-记忆『核心』⭐️"}},[this._v("#")]),this._v(" 2.1.记忆『核心』⭐️")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("int，long int，short int")]),this._v(" 的宽度和"),s("strong",[this._v("机器字长")]),this._v("及"),s("strong",[this._v("编译器")]),this._v("有关,但一般都有以下规则（ANSI/ISO制订的）")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("p",[n("code",[t._v("sizeof(short int) <= sizeof(int)")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("sizeof(int) <= sizeof(long int)")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("short int")]),t._v(" 至少应为16位（2字节）")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("long int")]),t._v(" 至少应为32位")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("数据类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("16位编译器")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("32位编译器")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("64位编译器")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("char")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("1字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("1字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("1字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("『指针』char*")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("2字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("8字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("short int")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("2字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("2字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("2字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("int")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("2字节")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("4字节")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("4字节")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned int")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("2字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("float")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("8字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("8字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("8字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("long")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("4字节")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("4字节")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("8字节")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("long long")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("8字节")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("8字节")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("8字节")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned long")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("4字节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("8字节")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_02-实验观察内存对齐❎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02-实验观察内存对齐❎"}},[this._v("#")]),this._v(" 02.实验观察内存对齐❎")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//要是不加#pragma pack(2)，则是默认4字节对齐，我们其实可以看做#pragma pack(4)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出为6   //因为加了#pragma pack(2)，根据规则2可以知道也是6")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_03-结构体内存对齐规则『核心』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_03-结构体内存对齐规则『核心』"}},[this._v("#")]),this._v(" 03.结构体内存对齐规则『核心』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("Tips：C语言和C++允许你用预编译来干预内存对齐")]),this._v(" "),s("ul",[s("li",[this._v("比如用"),s("code",[this._v("#pragma pack")]),this._v("来干预。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("现代计算机读取数据的时候，都是一次性读取一个内存块，比如4字节。（更准确来说是与数据线根数有关，所以说，其实现在都是64位的CPU，一次性能够读取8字节）")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("16位CPU机器默认2字节对齐『"),n("code",[t._v("#pragma pack(2)")]),t._v("』")]),t._v(" "),n("li",[t._v("32位CPU机器默认4字节对齐『"),n("code",[t._v("#pragma pack(4)")]),t._v("』")]),t._v(" "),n("li",[t._v("64位CPU机器上的64位编译器默认8字节对齐『"),n("code",[t._v("#pragma pack(8)")]),t._v("』")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("内存对齐又分为『自然对齐』和『规则对齐』")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-3-自然对齐和规则1：基本类型对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-自然对齐和规则1：基本类型对齐"}},[this._v("#")]),this._v(" 3.3.自然对齐和规则1：基本类型对齐")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("指的是将对应变量类型存入对应地址值的内存空间，即数据要根据其数据类型存放到以其数据类型为倍数的地址处。")]),this._v(" "),s("ul",[s("li",[this._v("例如 char 类型占1个字节空间，1的倍数是所有数，因此可以放置在任何允许地址处")]),this._v(" "),s("li",[this._v("而int类型占4个字节空间，以4为倍数的地址就有0,4,8等。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("编译器会优先按照自然对齐进行数据地址分配。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("基本类型")]),this._v("的对齐值就是其"),s("code",[this._v("sizeof")]),this._v("获得值；")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("我们在进行基本类型对齐的同时，我们"),s("strong",[this._v("要尽量保证每个变量整体能放到1个或者2个内存块当中")]),this._v("，并且要尽可能的小。也就是能放在1个内存块，绝不放2个，否则会降低效率，比如先前图片中int放的位置。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("对于标准数据类型，它的地址只要是它的长度的整数倍就行了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("非标准数据类型按下面的原则对齐：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("数组：按照基本数据类型对齐，第一个对齐了后面的自然也就对齐了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("联合：按其包含的长度最大的数据类型对齐。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("结构体：结构体中每个数据类型都要对齐。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-2-规则对齐和规则2：struct和union的数据成员对齐规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-规则对齐和规则2：struct和union的数据成员对齐规则"}},[this._v("#")]),this._v(" 3.2.规则对齐和规则2："),s("code",[this._v("struct")]),this._v("和"),s("code",[this._v("union")]),this._v("的数据成员对齐规则")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("li",[n("p",[n("b",[t._v("结构(struct)和联合(union))的数据成员")]),t._v("对齐规则：")]),t._v(" "),n("ul",[n("li",[t._v("在数据成员完成各自对齐之后，结构和联合"),n("strong",[t._v("本身")]),t._v("也要进行对齐。")]),t._v(" "),n("li",[t._v("1—"),n("b",[t._v("未改变默认规定对齐值")]),t._v("，对齐将按照结构或联合整体"),n("code",[t._v("sizeof")]),t._v("和"),n("code",[t._v("默认的机器字节对齐")]),t._v("中，比较小的那个进行;")]),t._v(" "),n("li",[t._v("2—"),n("b",[t._v("修改了默认规定对齐值")]),t._v("，比如"),n("code",[t._v("#pragma pack(n)")]),t._v("，对齐将按照"),n("code",[t._v("#pragma pack(n)")]),t._v("指定的数值和结构(或联合)"),n("code",[t._v("sizeof")]),t._v("获得值中"),n("b",[t._v("小")]),t._v("的那个进行;")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"_1、难点1—double『测试坑』⭐️『其实说的就是“可移植性”』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、难点1—double『测试坑』⭐️『其实说的就是“可移植性”』"}},[this._v("#")]),this._v(" 1、难点1—double『测试坑』⭐️『其实说的就是“可移植性”』")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test_32")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("这个结构体在32位下所占内存空间为12字节，只能拆分成两个4字节进行处理，所以这里规则对齐将判定该结构体最大数据类型长度为4字节，因此总长度为4字节的整数倍，也就是12字节。")]),this._v(" "),s("li",[this._v("这个结构体在64位环境下所占内存空间为16字节，而64位判定最大为8字节，所以结果也是8字节的整数倍：16字节。这里的结构体中的double没有按照自然对齐放置到理论上的8字节倍数地址处，我认为这里编译器也有根据规则对齐做出相应的优化，节省了4个多余字节")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test_32")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        cout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \tcout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输入是16")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//8")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test_32")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        cout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \tcout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输入是12")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("或许上面就是，我们使用pack(4)之后是12的原因？？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"_2、数组『1个易错』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、数组『1个易错』"}},[this._v("#")]),this._v(" 2、"),s("strong",[this._v("数组")]),this._v("『1个易错』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("对齐值为："),s("strong",[this._v("min(数组元素类型，编译器默认对齐长度/修改后)")]),this._v("。")]),this._v(" "),s("li",[this._v("易错：数组对齐的长度是按照『数组成员类型』长度来比对的")]),this._v(" "),s("li",[this._v("但数组中的元素是连续存放，存放时还是按照数组实际的长度。如char t[9]，对齐长度为1，实际占用连续的9byte。然后根据下一个元素的对齐长度决定在下一个元素之前填补多少byte")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"_3、嵌套的结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、嵌套的结构体"}},[this._v("#")]),this._v(" 3、"),s("strong",[this._v("嵌套的结构体")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对于B结构体在A中的对齐长度为：min(B结构体的对齐长度,编译器默认对齐长度/修改后)")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-3-综合方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-综合方法"}},[this._v("#")]),this._v(" 3.3.综合方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("#pragma pack")]),this._v("可以修改，『编译器默认对齐数』，修改之后，下面的那个对齐规则一律换成改后的！！")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_1、首先『自然对齐』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先『自然对齐』"}},[this._v("#")]),this._v(" 1、首先『自然对齐』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("1.第1个"),s("strong",[this._v("数据成员")]),this._v("在『"),s("strong",[this._v("结构")]),this._v("(struct)/"),s("strong",[this._v("联合")]),this._v("(union)』变量offset偏移量为0 的地址处，也就是第一个成员必须从头开始。『原因：很显然，1,2,4,8的共同的倍数都是0，因为0乘以任何数都是0』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2、然后『规则对齐』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、然后『规则对齐』"}},[this._v("#")]),this._v(" 2、然后『规则对齐』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("4.如果嵌套结构体，被嵌套的结构体对齐到『自己的最大对齐数』的整数倍处，（"),s("strong",[this._v("其实就是，我们将这个结构体也看作1个普通的类型 变量")]),this._v('，这个思想有的像『递归』的定义『『『如果一个结构里有某些结构体成员，则结构体成员要从其内部"最宽'),s("strong",[this._v("基本类型")]),this._v('成员"的整数倍地址开始存储』』』）结构体的整体大小就是所有最大对齐数（包含嵌套结构体的对齐数）的整数倍。')])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-4-坑点："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-坑点："}},[this._v("#")]),this._v(" 3.4.坑点：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("结构体中union等，要是没有实例化，并且没有其他元素，那么不用算他占的大小\n"),s("ul",[s("li",[this._v("如果，仅仅只有它，需要算1个字节，毕竟如果不算，那就不好表述struct了 『类似问，空class是多大』")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_05-杠筋？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_05-杠筋？"}},[this._v("#")]),this._v(" 05.杠筋？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_5-1-测试环境（推翻第2条规则）♻️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-测试环境（推翻第2条规则）♻️"}},[this._v("#")]),this._v(" 5.1.测试环境（推翻第2条规则）♻️??")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("64位的CPU，但是编译器选择"),s("code",[this._v("DevC++ 32bit Release版本")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("xx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" _x1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" _x2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _x3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" _x4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _x5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" xx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("_x5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_x1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_x2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_x3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_x4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offsetof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_x4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-txt line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("24\n0\n8\n12\n16\n17\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_5-1-1-『看似解释不通？』，如果按照先前的解释方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-『看似解释不通？』，如果按照先前的解释方式"}},[this._v("#")]),this._v(" 5.1.1.『看似解释不通？』，如果按照先前的解释方式:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-txt line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("_x1 对齐数 min(long long,4)=4   0-7\n_x2 对齐数 min(char,4)=1\t\t8\n_x3 对齐数 min(int,4)=4\t\t\t12-15\n_x4 对齐数 min(char,4)=1\t\t16-17\t（易错点，注意是char，而不是2个char）\n整体字节对齐\nmax(4,1,4,1)=4\n那么20字节就OK了，但是这样不对？？？？为什么？？『我的解释在后边！！』\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_5-1-2-最新解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-最新解释"}},[this._v("#")]),this._v(" 5.1.2.最新解释")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-txt line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("_x1 对齐数 min(long long,4)=4   0-7\n_x2 对齐数 min(char,4)=1\t\t8\n_x3 对齐数 min(int,4)=4\t\t\t12-15\n_x4 对齐数 min(char,4)=1\t\t\t16-17\n\n整体字节对齐\nmax(long long,char ,int , char)=8\n那么24字节才OK\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("并不是的，我的理解是由于CPU是64位的，所以还是默认"),s("code",[this._v("#pragma pack(8)")]),this._v("，编译器说32位也没用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("『原因：你如果在前面进行强制的"),s("code",[this._v("#pragma pack(4)")]),this._v("，你就发现，答案是20而不是24，所以，我猜测这个是CPU的原因』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_5-1-3-alignof好的测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-alignof好的测试"}},[this._v("#")]),this._v(" 5.1.3.alignof好的测试")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("alignof : 获取地址对齐的大小，POD里面最大的内存对其的大小。")]),this._v(" "),s("li",[this._v("C 的 _Alignof 和 C++ 的 alignof 可以获得类型的对齐。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("环境64位CPU，64位编译器")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("node")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//char ss;")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("temp")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\tt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alignof(node):"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alignof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//alignof(node):8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//16")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("如果加上"),s("code",[this._v("char ss;")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("//alignof(node):8")]),this._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("//24")]),this._v("\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_03-典例解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_03-典例解释"}},[this._v("#")]),this._v(" 03.典例解释")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-1-单个struct『good解释⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-单个struct『good解释⭐️"}},[this._v("#")]),this._v(" 3.1.单个"),s("code",[this._v("struct")]),this._v("『Good解释⭐️")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_3-1-1-可移植性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-可移植性"}},[this._v("#")]),this._v(" 3.1.1.可移植性")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("在一个"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("位的机器，以下结构由于边界对齐浪费了多少空间（）\n复制代码\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n正确答案"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" D   你的答案"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("D")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("正确"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("1、自然对齐，min(char，『"),s("code",[this._v("#pragma pack(2)")]),this._v("』)=1，所以a是1个字节放在[0,0]")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("2、自然对齐，min（int（注意，此机器上是2），『"),s("code",[this._v("#pragma pack(2)")]),this._v("』）=2，所以放在[2,3]")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("3、自然对齐，min(char,『"),s("code",[this._v("#pragma pack(2)")]),this._v("』)=1，所以c是1个字节放在[4,4]")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("4、规则对齐，是max(1,2,1)=2,所以是2的倍数，最接近是6，就是[0,5]\n然后，char+int（此机器上是2）+char=6个字节\n"),s("ul",[s("li",[this._v("8-6=2个字节浪费")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_3-1-2-面试记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-面试记录"}},[this._v("#")]),this._v(" 3.1.2.面试记录")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("测试环境『64位编译器，，我觉得默认是64位CPU』")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你必须定义一个 `main()` 函数入口。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//测试环境是：64位gcc编译器下输出")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" test\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" aa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" bb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//徐晃一枪，没有变量被定义，仅仅是“声明”")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[this._v("16")]),this._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[this._v("24")]),this._v("\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("64位的gcc编译器下对齐是『"),s("code",[this._v("#pragma pack(8)")]),this._v(" 』")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[s("code",[this._v("min（int(4) , 『#pragma pack(8)』）")]),this._v("  =4字节对齐，int 占据前4个")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[s("code",[this._v("min（short(2),『#pragma pack(8)』）")]),this._v("= 2字节对齐，short仅接着据2『后面，我们发现还要填补充』")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[s("code",[this._v("min（int(4) , 『#pragma pack(8)』）")]),this._v("  =4字节对齐，但是此时开始的位置不是4的倍数！『所以给前面的填pack』然后int 占据4个")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[s("code",[this._v("min（char(1) , 『#pragma pack(8)』）")]),this._v("  =1字节对齐，char紧接着占据1个  『后面，我们发现还要填补充』")]),this._v(" "),s("ul",[s("li",[this._v("这个时候，我们发现，获得的是13个字节")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("接着，结构体总大小进行对齐『我们需要采用前面弄到的")]),this._v(" "),s("ul",[s("li",[this._v("max（4,2,4,1）=4发现，最大对齐数是4")]),this._v(" "),s("li",[this._v("那么，我们知道最近的是16")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("64位的gcc编译器下对齐是『"),s("code",[this._v("#pragma pack(8)")]),this._v(" 』")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",[t._v("自然对齐")]),t._v(" "),n("th",[t._v("占用的大小")]),t._v(" "),n("th",[t._v("是否有补丁")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("min（double(8) , 『#pragma pack(8)』）")]),t._v("  =8字节对齐")]),t._v(" "),n("td",[t._v("double占据前8个")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("min（short(2),『#pragma pack(8)』）")]),t._v("= 2字节对齐")]),t._v(" "),n("td",[t._v("short仅接着据2『后面，我们发现还要填补充』")]),t._v(" "),n("td",[t._v("2")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("min（int(4) , 『#pragma pack(8)』）")]),t._v("  =4字节对齐，")]),t._v(" "),n("td",[t._v("但是此时开始的位置不是4的倍数！『所以给前面的填pack』然后int 占据4个")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("min（char(1) , 『#pragma pack(8)』）")]),t._v("  =1字节对齐")]),t._v(" "),n("td",[t._v("char紧接着占据1个  『后面，我们发现还要填补充』")]),t._v(" "),n("td")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("这个时候，我们发现，获得的是13个字节")])]),this._v(" "),s("li",[s("p",[this._v("接着，结构体总大小进行对齐『我们需要采用前面弄到的表格中第1列的值来求max』")]),this._v(" "),s("ul",[s("li",[this._v("max（4,2,4,1）=4发现，最大对齐数是4")]),this._v(" "),s("li",[this._v("那么，我们知道最近的是16")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-2-单个union『复杂内存对齐分析（面试）』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-单个union『复杂内存对齐分析（面试）』"}},[this._v("#")]),this._v(" 3.2.单个"),s("code",[this._v("union")]),this._v("『复杂内存对齐分析（面试）』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("测试环境『64位编译器，，或许默认64位CPU』")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("one")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1->内存对齐（4） ")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" test\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" aa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" bb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//没有实例化，不用管 ")]),t._v("\n\t\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//32位机器 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("two")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" test\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" aa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" bb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("three")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" test\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" aa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" bb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("four")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("_four"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(long)=%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tone _one"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_one"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ttwo _two"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_two"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tthree _three"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_three"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_four"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" m2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" m3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" uu\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" ul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" u2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ua"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" myaa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n问"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("位机器下"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n答："),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("p",[t._v("联合体的解释：")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("min( char(1), #pragma pack(4) )")]),t._v("=1，我们的u1的5个元素，依次放到[0-4]")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("min( int(4), #pragma pack(4) )")]),t._v("=4，我们的u2的2个元素，依次从[0-7]『注意，是从头开始！』")])]),t._v(" "),n("li",[n("p",[t._v("然后，我们发现，最长的占用了8个Byte")]),t._v(" "),n("ul",[n("li",[t._v("接下来：规则对齐，"),n("code",[t._v("max(1,4)")]),t._v("=4，发现8是合理的，那么就占用8『注意，这个union整体的对齐数就是规则对齐数得到的——4『不要相成是8哈！！容易错』』")])])]),t._v(" "),n("li",[n("p",[t._v("union外边的")]),t._v(" "),n("ul",[n("li",[t._v("int m1  4个")]),t._v(" "),n("li",[t._v("char m2 1个")]),t._v(" "),n("li",[t._v("float m3 4个\n按照规则2和3，我们要按照默认的4字节对齐来对这些在结构体中重排列\nm1  offset=0-3\nm2\toffset=4\noffset=5-7不用，但是占领\nm3\toffset=8-11\nunion\toffset=12-19\n总共，占用5个内存块，一个20个字节。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-3-单个位段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-单个位段"}},[this._v("#")]),this._v(" 3.3.单个位段")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("可能嵌入式和网络编程中会用到这种用法：位段（也叫位域）一种特殊的类结构体语法")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("ab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出4")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"问题：sizeof（long-是4还是8的不同是由不同编译器决定的，还是操作系统的位数，还是电脑的位数，还是c的标准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题：sizeof（long-是4还是8的不同是由不同编译器决定的，还是操作系统的位数，还是电脑的位数，还是c的标准"}},[this._v("#")]),this._v(" 问题：sizeof（long)是4还是8的不同是由不同编译器决定的，还是操作系统的位数，还是电脑的位数，还是C的标准")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("有人回答：这个是由编译器决定的，有的是32位编译器，有的是64位编译器，有的是标准C编译器，有的是C++编译器，都有可能不同")]),this._v(" "),s("li",[this._v("『正确吗？？？』")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-4-数组和指针组合『难题』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数组和指针组合『难题』"}},[this._v("#")]),this._v(" 3.4.数组和指针组合『难题』")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("以下代码打印的结果是（假设运行在 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" 位计算机上）：\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("st_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pdata"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" errstr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("st_t")]),t._v(" st"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("st"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("esstr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("“"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("d”"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("st"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//题目来自——牛客网")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("//上面这道题，我们暂时不分析最后的结果，我们只分析在64位的机器下的这个结构体占用的字节。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("int status;")]),this._v("虽然int只占用4个 由于后面的指针八个字节放不下 填补不了空位 所以对其要八个字节(后面的4个为对齐位）\n"),s("code",[this._v("short *pdata;")]),this._v("这个指针会占用8个字节"),s("br"),this._v(" "),s("code",[this._v("char errstr[32];")]),this._v(" 占用32个字节")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("所以一共占用 8+8+32=48个字节")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("char *p=(char *)(st[2].esstr+32)")]),this._v("，p实际指向了st[3]"),s("br"),this._v("\n则"),s("code",[this._v("p-(char *)(st))")]),this._v("，即为"),s("code",[this._v("&st[3]-&st[0]")]),this._v(",占用空间为3个结构体的大小，即3*48=14")])}],!1,null,null,null);s.default=e.exports}}]);