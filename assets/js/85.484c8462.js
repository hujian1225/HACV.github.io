(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{257:function(t,e,s){"use strict";s.r(e);var _=s(0),r=Object(_.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._m(2),t._v(" "),t._m(3),t._v(" "),s("ol",[s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("编译器在"),s("strong",[t._v("编译时期")]),t._v("为每个带虚函数的类创建一份虚函数表")])],1),t._v(" "),t._m(4)]),t._v(" "),s("ul",[s("li",[t._v("参考自：《收割BAT："),s("a",{attrs:{href:"https://www.nowcoder.com/tutorial/10018/index",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++校招学习路线总结"),s("OutboundLink")],1),t._v("》，特立独行MVP")])]),t._v(" "),t._m(5),t._v(" "),s("ul",[s("li",[t._m(6),t._v(" "),s("ul",[t._m(7),t._v(" "),t._m(8),t._v(" "),s("li",[t._v("3."),s("font",{staticStyle:{background:"yellow"}},[t._v("执行基类的"),s("strong",[t._v("构造函数函数体")])])],1)])]),t._v(" "),t._m(9)]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"c-面试题复盘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-面试题复盘"}},[this._v("#")]),this._v(" C++面试题复盘")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<font style="background:yellow">\n')])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"✅虚函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#✅虚函数"}},[this._v("#")]),this._v(" ✅虚函数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_01-虚函数表vtbl："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-虚函数表vtbl："}},[this._v("#")]),this._v(" 01.虚函数表vtbl：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("strong",[this._v("实例化")]),this._v("对象时, 编译器自动将类对象的虚表指针指向这个虚函数表")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_02-构造一个派生类对象的过程："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_02-构造一个派生类对象的过程："}},[this._v("#")]),this._v(" 02.构造一个派生类对象的过程：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("1.构造"),e("strong",[this._v("基类")]),this._v("部分：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("1.将实例的虚表指针指向"),e("strong",[this._v("基类的vtbl")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("2.构造基类的"),e("strong",[this._v("成员变量")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[t._v("2."),s("strong",[t._v("递归")]),t._v("构造派生类部分：")]),t._v(" "),s("ul",[s("li",[t._v("1.将实例的虚表指针指向"),s("strong",[t._v("派生类vtbl")])]),t._v(" "),s("li",[t._v("2.构造派生类的成员变量")]),t._v(" "),s("li",[t._v("3.执行派生类的构造函数体")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-1-是先构造父类的虚表指针还是先构造父类的成员？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-是先构造父类的虚表指针还是先构造父类的成员？"}},[this._v("#")]),this._v(" 2.1.是先构造父类的虚表指针还是先构造父类的成员？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("虚表指针")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-2-虚表指针和构造函数体那个先被构造？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-虚表指针和构造函数体那个先被构造？"}},[this._v("#")]),this._v(" 2.2.虚表指针和构造函数体那个先被构造？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("虚表指针先构造")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_03-c-运行构造函数的时候虚函数表被构造出来了么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_03-c-运行构造函数的时候虚函数表被构造出来了么？"}},[this._v("#")]),this._v(" 03.c++运行构造函数的时候虚函数表被构造出来了么？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("构造出来了。因为虚函数表是在"),e("strong",[this._v("编译时")]),this._v("由编译器创建，在"),e("strong",[this._v("运行")]),this._v("时肯定已经创建完成。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_04-析构一个派生类对象的过程："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_04-析构一个派生类对象的过程："}},[this._v("#")]),this._v(" 04.析构一个派生类对象的过程：")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("1."),s("strong",[t._v("递归")]),t._v("析构派生类部分：")]),t._v(" "),s("ul",[s("li",[t._v("1.将实例的虚表指针指向"),s("strong",[t._v("派生类vtbl")])]),t._v(" "),s("li",[t._v("2.执行派生类的"),s("strong",[t._v("析构函数体")])]),t._v(" "),s("li",[t._v("3.析构派生类的"),s("strong",[t._v("成员变量")])])])]),t._v(" "),s("li",[s("p",[t._v("2.析构基类部分：")]),t._v(" "),s("ul",[s("li",[t._v("1.将实例的虚表指针指向基类的vtbl")]),t._v(" "),s("li",[t._v("2.执行基类的析构函数函数体")]),t._v(" "),s("li",[t._v("3.析构基类的成员变量")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"✅基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#✅基础"}},[this._v("#")]),this._v(" ✅基础")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_01-vector是线程安全的吗？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-vector是线程安全的吗？"}},[this._v("#")]),this._v(" 01.vector是线程安全的吗？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("不是线程安全的！")]),this._v(" "),e("li",[this._v("参考：《Linux多线程服务器端编程》P4")]),this._v(" "),e("li",[this._v("巨人网络")])])}],!1,null,null,null);e.default=r.exports}}]);