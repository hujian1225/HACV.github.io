(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{262:function(t,e,s){"use strict";s.r(e);var n=s(0),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._m(3),t._v(" "),s("p",[t._v("[TOC]")]),t._v(" "),t._m(4),t._m(5),t._v(" "),s("ul",[t._m(6),t._v(" "),t._m(7),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("guard，v.防范，n.防护装置")]),t._v("，防御式声明")],1),t._v(" "),s("li",[t._v("（"),s("font",{staticStyle:{background:"yellow"}},[t._v("class declarations，类-声明")]),t._v("）")],1),t._v(" "),s("li",[t._v("（"),s("font",{staticStyle:{background:"yellow"}},[t._v("class definition，类-定义")]),t._v("）")],1),t._v(" "),s("li",[t._v("（"),s("font",{staticStyle:{background:"yellow"}},[t._v("forward declarations，前置声明")]),t._v("）")],1),t._v(" "),s("li",[t._v("constructor（ctor，构造函数）")]),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("class with pointers members的"),s("strong",[t._v("必须")]),t._v("有"),s("code",[t._v("copy ctor")]),t._v("和"),s("code",[t._v("copy op=")])])],1),t._v(" "),t._m(8),t._v(" "),t._m(9)]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),s("h4",{attrs:{id:"『单个class设计』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#『单个class设计』"}},[t._v("#")]),t._v(" 『"),s("font",{staticStyle:{background:"yellow"}},[t._v("单个class设计")]),t._v("』")],1),t._v(" "),t._m(19),t._v(" "),t._m(20),s("h4",{attrs:{id:"『多个class』，之间有某种关联的话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#『多个class』，之间有某种关联的话"}},[t._v("#")]),t._v(" 『"),s("font",{staticStyle:{background:"yellow"}},[t._v("多个class")]),t._v("』，之间有某种关联的话")],1),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("现在，几乎学任何一个语言，都是这样子的，要把这2个分开来")]),t._v("。")],1),t._v(" "),s("p",[t._v("在比较早期，也许在C的时代。大家还关注的是语言的部分。当然，你也脱不开，标准库的部分，C也有它的标准库。")]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),s("ul",[s("li",[s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("guard，v.防范，n.防护装置")])],1)]),t._v(" "),t._m(59)]),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),s("ul",[s("li",[s("p",[t._v("1—就是你要写的那个复数的『声明（"),s("font",{staticStyle:{background:"yellow"}},[t._v("class declarations，类-声明")]),t._v("）』")],1)]),t._v(" "),s("li",[s("p",[t._v("2—就是你要写的复数的『定义（"),s("font",{staticStyle:{background:"yellow"}},[t._v("class definition，类-定义")]),t._v("）』，这样讲不上很精准，但是可以这样理解。")],1)]),t._v(" "),s("li",[s("p",[t._v("1和2写好之后，你可能要检讨一下，有些东西『必须在前面先声明过，于是才会写0这个部分』（"),s("font",{staticStyle:{background:"yellow"}},[t._v("forward declarations，前置声明")]),t._v("）")],1)])]),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._v(" "),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._v(" "),s("blockquote",[s("p",[t._v("inline的概念："),s("font",{staticStyle:{background:"yellow"}},[t._v("什么时候会产生inline呢？")])],1)]),t._v(" "),s("ul",[s("li",[t._v("1、你的函数"),s("font",{staticStyle:{background:"yellow"}},[t._v("在你的class的『本体』（class body）里面"),s("strong",[t._v("定义")])]),t._v("，它就形成了这样1种『inline』")],1),t._v(" "),s("li",[t._v("2、如果在外头『定义』，它就不是inline『重要，重要』，然后你就只能使用在外头的函数前面加上inline关键字去建议编译器")])]),t._v(" "),t._m(77),t._v(" "),s("p",[t._v("类似宏一样，但不不是完全一样，而是有它的特性，而没有它的缺点"),s("br"),t._v("\n总之：如果你的函数是个inline fuction会很好。会比较快，比较好"),s("br"),t._v("\n当然我们想说："),s("font",{staticStyle:{background:"yellow"}},[t._v("那所有函数，我们把他们写成"),s("code",[t._v("inline function")]),t._v("，那就最好了，的确是！")]),s("br"),t._v("\n但是：有些function，即时你说它是inline，编译器也不把它做成inline，编译器没有能力把它做成inline。"),s("br"),t._v("\n这个分界点在哪呢？简单的这样想：如果你的函数太复杂了，就没有办法inline，这对我们写程序的人来说，这有点讨厌。。干脆我们全部让他inline就好了。『可以！！』")],1),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),s("p",[t._v("在1个本体当中，很重要的可以区分为某几大段。用什么样的关键字来区分呢？private和public")]),t._v(" "),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._v(" "),t._m(86),t._m(87),t._v(" "),s("p",[t._v("构造函数里面要做的事情：\n1、设置到实部和虚部：可能在大括号里面写，这样OK，但是咋们要弄一个大气，好的写法是：不要这么写。\n我们应该要利用『构造函数』的1种很特别的语法，『只有构造函数才有』。其他函数是没有的——初始列\n关于这1行写在哪里，无所谓，随便你还不换行，因为C和C++都是『1种free format『不是这个单词》，，自由形式的写法』，随便你在哪断行。\n初始化，这种写法，我会看你是不是充分使用。而不是省略的放在{}里面，最后结果是1样的，但是表示你没有受过良好训练")]),t._v(" "),s("p",[t._v("PS『注意』：")]),t._v(" "),t._m(88),t._v(" "),t._m(89),t._v(" "),s("ul",[s("li",[t._v("此外：与构造函数对应的，有个析构函数，语法也蛮特别的。但是在我们这个例子里面，不需要写析构函数！")]),t._v(" "),s("li",[t._v("原因：前面我们提到过，class有1个经典的分类，1种带指针，1种不带指针。")]),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("这种就是不带指针的class，"),s("strong",[t._v("多半是不用写析构函数的")]),t._v("，『也不能说全部哈！（笔者的想法是，比如需要某析构函数来输出提示文字帮助阅读）")]),t._v("』")],1)]),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),s("p",[t._v("现实生活中常常会这样吗？  常常会，比如你现在设计1个类，等待外界要来创建1个对象。创建对象的时候，要怎么创建，你可能有很多想法，比如你可能有3种想法：那你就写出3个构造函数。")]),t._v(" "),t._m(92),t._v(" "),t._m(93),t._v(" "),t._m(94),s("ul",[s("li",[t._v("『注意点：』"),s("font",{staticStyle:{background:"yellow"}},[t._v("『易错』画黄色底色的，这种写法是不行的！")])],1),t._v(" "),s("li",[t._v("看起来语言上是可以的，但是实际上是不行的！")]),t._v(" "),t._m(95)]),t._v(" "),t._m(96),t._v(" "),t._m(97),t._v(" "),t._m(98),t._v(" "),t._m(99),t._v(" "),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._v(" "),t._m(103),t._v(" "),s("p",[t._v("外界不能创建它。。。那么外界需要它的话，那么怎么办呢？？？")]),t._v(" "),s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("我们观察到：我们是借助static成员函数突破class的访问级别，被全局访问，然后借助这个static成员函数，去访问private的构造函数，『神奇的思路』。。。")])],1),t._v(" "),s("p",[t._v("Singleton，你可能查字典查不到这个字。你可能查字典，查到Single。")]),t._v(" "),t._m(104),t._v(" "),t._m(105),t._v(" "),s("p",[t._v("『这里出现了目前没有学的语法，重点只是告诉大家确实有这样一种需求，把构造函数放在private中去』")]),t._v(" "),t._m(106),t._v(" "),t._m(107),t._v(" "),t._m(108),t._v(" "),t._m(109),t._v(" "),s("p",[t._v("大家想一想，")]),t._v(" "),t._m(110),t._v(" "),s("ul",[s("li",[t._v("注意：const要加的话，就一定要加！！！『三遍的重要』")]),t._v(" "),s("li",[t._v("不加的话，会有什么样的"),s("font",{staticStyle:{background:"yellow"}},[t._v("后果？？")])],1),t._v(" "),s("li",[t._v("注意右边：")]),t._v(" "),t._m(111),t._v(" "),s("li",[t._v("检讨：万一没加，而使用者会这么用，会产生什么后果，使用者的第一行的意思：我这个值是不可以改变的哦，我这个复数里面的2和1都是不可以改变的。，，然后，我要取得实数部分，逻辑上可以，，但是如果忘记写了const，那这个函数的意思就是说：我这个函数可以会改变Data，使用者说，绝对不可以该，这个函数却告诉我说，我可能会改变。")]),t._v(" "),s("li",[t._v("这是矛盾的，所以，编译器编译到这个的时候，就说不行！！你这个调用不行，如果你没有写const的话，它会说不行！『这样，使用者是不是会愕然，大吃一惊，我有个实部，为什么我不能够打印它的数据呢』那就表示你这个复数class设计不好！！！复数是谁设计的？？不就是我们嘛。。我们设计不好，就是因为该加const就没有加")])]),t._v(" "),s("p",[t._v("『很多很多人忽略这个很重要的事情』")]),t._v(" "),t._m(112),t._v(" "),t._m(113),t._v(" "),s("ul",[t._m(114),t._v(" "),t._m(115),t._v(" "),t._m(116),t._v(" "),t._m(117),t._v(" "),t._m(118),t._v(" "),t._m(119),t._v(" "),t._m(120),t._v(" "),t._m(121),t._v(" "),t._m(122),t._v(" "),t._m(123),t._v(" "),t._m(124),t._v(" "),t._m(125),t._v(" "),s("li",[s("p",[t._v("『所以，现在建立一个"),s("font",{staticStyle:{background:"yellow"}},[t._v("良好的习惯")]),t._v("——『你最好，所有的参数传递，你都传递引用』，，尽量不要传递值』")],1)])]),t._v(" "),s("p",[t._v("这个时候，可能有人检讨了：如果传递的是一个char呢》》如果你传引用的话，那不是更大？？那我还不如单单传char，，这个讨论是很细节的。这个说法是对的！！你愿意想得这么细也可以。『但是如果给你个大范围的遵循守则的话，我愿意说大家，不管什么都传递引用』")]),t._v(" "),t._m(126),t._v(" "),t._m(127),t._v(" "),t._m(128),t._v(" "),t._m(129),t._v(" "),t._m(130),t._v(" "),t._m(131),t._v(" "),t._m(132),t._v(" "),s("p",[t._v("『但是，在在这个人语言里头说，朋友可以来拿『数据』』")]),t._v(" "),s("p",[t._v("private的数据，不想让外界任何人去取得我的。我们要的就是这种封装，但是对于特别的一种人，我网开一面，我是设计class的人。")]),t._v(" "),t._m(133),t._v(" "),t._m(134),t._v(" "),t._m(135),t._v(" "),t._m(136),t._v(" "),t._m(137),t._v(" "),t._m(138),t._v(" "),t._m(139),t._v(" "),t._m(140),t._v(" "),t._m(141),t._v(" "),t._m(142),t._v(" "),s("p",[t._v("首先考虑引用→用引用可不可以呢？→决定")]),t._v(" "),t._m(143),t._v(" "),t._m(144),t._v(" "),t._m(145),t._v(" "),s("p",[t._v("C语言中，如果你要对一个东西进行操作，一定是设计一个函数。事实上，在C++里面，操作符就是一种函数。是可以让你重新定义的！！这是它很大的一个特点。")]),t._v(" "),t._m(146),t._v(" "),t._m(147),t._v(" "),t._m(148),t._v(" "),t._m(149),t._v(" "),t._m(150),t._v(" "),t._m(151),t._v(" "),t._m(152),t._v(" "),t._m(153),t._v(" "),t._m(154),t._v(" "),t._m(155),t._v(" "),t._m(156),t._v(" "),t._m(157),t._m(158),t._v(" "),t._m(159),t._v(" "),t._m(160),t._v(" "),t._m(161),t._v(" "),t._m(162),t._v(" "),t._m(163),t._v(" "),t._m(164),t._v(" "),t._m(165),t._v(" "),t._m(166),t._v(" "),t._m(167),t._v(" "),t._m(168),t._v(" "),s("p",[t._v("首先考虑传引用，看有没有副作用。可以要不要加const？？因为os不可以改")]),t._v(" "),t._m(169),t._v(" "),t._m(170),t._v(" "),t._m(171),t._v(" "),t._m(172),t._m(173),t._v(" "),t._m(174),t._v(" "),t._m(175),t._v(" "),t._m(176),t._v(" "),t._m(177),t._v(" "),t._m(178),t._v(" "),t._m(179),t._v(" "),t._m(180),t._v(" "),t._m(181),t._v(" "),t._m(182),t._m(183),t._v(" "),t._m(184),t._v(" "),t._m(185),t._v(" "),t._m(186),t._v(" "),t._m(187),t._v(" "),t._m(188),t._v(" "),t._m(189),t._v(" "),t._m(190),t._v(" "),t._m(191),t._v(" "),t._m(192),t._v(" "),t._m(193),t._v(" "),t._m(194),t._v(" "),t._m(195),t._v(" "),t._m(196),t._v(" "),t._m(197),t._v(" "),t._m(198),t._v(" "),t._m(199),t._v(" "),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("可能，本来就有东西！！！")])],1),t._v(" "),s("li",[t._v("拷贝赋值，这个概念。好，现在先听我这边讲，我要把这一边的东西复制到我的把我的右手先跟你看起来刚好相反哈，我的右手是你的左边，我要把一。\n右边的东西赋值或者叫拷贝到左边身上来，我该怎么办呢？\n1、这左右本来就都已经有东西了！！『核心，最容易被忽略的地方！！！』\n2、我应该先把左边杀掉，清空，然后创建出跟右边一样大的空间，再把右边复制到我的左边身上。\n3、我再讲一次，这两个本来就都有东西，我要先把这一个的原来东西清空，然后分配一块跟这边一样大的空间，然后把这边拷贝到这里来，这是很容易理解的。\n4、那这就是这三个动作，先delete掉自己，因为这个赋值操作哈用法是这样，各位看到这样子。")])]),t._v(" "),t._m(200),t._v(" "),t._m(201),t._v(" "),t._m(202),t._v(" "),s("ul",[t._m(203),t._v(" "),t._m(204),t._v(" "),t._m(205),t._v(" "),t._m(206),t._v(" "),s("li",[s("p",[t._v("你看是这样，他一开始左跟右就是指同一个，事实上就只有一个了，我把它画成左边跟右边啊，世上就只有一个。\n那赋值动作的第一件事情是杀掉，还记得吗？\n我们再回头看一看，一、二、三里面的第一个动作就是杀！！！\n假设你没有写上面这一块啊，我们正在讨论要不要写上面这一块，你没有。！！！\n嗯好，"),s("font",{staticStyle:{background:"yellow"}},[t._v("那你就接下来就杀掉你看第一个动作就把『唯一』的这个杀掉了。！！！神乎其技的一个坑。。。")]),t._v("\n那下一个动作呢再回到刚刚这边来，第二个动作是要去看右边那个的长度。\n已经不行了呀，已经不见了。")],1)])]),t._v(" "),t._m(207),t._v(" "),t._m(208),t._v(" "),t._m(209),t._v(" "),t._m(210),t._v(" "),t._m(211),t._v(" "),t._m(212),t._v(" "),t._m(213),t._v(" "),t._m(214),t._v(" "),t._m(215),t._v(" "),t._m(216),t._v(" "),t._m(217),t._v(" "),t._m(218),t._v(" "),t._m(219),t._v(" "),t._m(220),t._v(" "),t._m(221),t._v(" "),t._m(222),t._v(" "),t._m(223),t._v(" "),t._m(224),t._v(" "),t._m(225),t._v(" "),t._m(226),t._v(" "),t._m(227),t._v(" "),t._m(228),t._v(" "),t._m(229),t._v(" "),t._m(230),t._v(" "),t._m(231),t._v(" "),t._m(232),t._v(" "),t._m(233),t._v(" "),t._m(234),t._v(" "),t._m(235),t._v(" "),t._m(236),t._v(" "),t._m(237),t._v(" "),t._m(238),t._v(" "),t._m(239),t._v(" "),t._m(240),t._v(" "),t._m(241),t._v(" "),t._m(242),t._v(" "),t._m(243),t._v(" "),t._m(244),t._v(" "),t._m(245),t._v(" "),t._m(246),s("p",[t._v("​")]),t._v(" "),t._m(247),t._v(" "),t._m(248),t._v(" "),t._m(249),t._v(" "),t._m(250),t._v(" "),t._m(251),t._v(" "),t._m(252),t._v(" "),t._m(253),t._m(254),t._v(" "),t._m(255),t._v(" "),t._m(256),t._m(257),t._v(" "),t._m(258),t._v(" "),t._m(259),t._v(" "),t._m(260),t._v(" "),t._m(261),t._v(" "),t._m(262),t._v(" "),t._m(263),t._v(" "),t._m(264),t._v(" "),t._m(265),t._v(" "),t._m(266),t._v(" "),t._m(267),t._v(" "),t._m(268),t._v(" "),t._m(269),t._v(" "),t._m(270),t._v(" "),t._m(271),t._v(" "),t._m(272),t._v(" "),t._m(273),t._v(" "),t._m(274),t._v(" "),t._m(275),t._v(" "),t._m(276),t._v(" "),t._m(277),t._v(" "),t._m(278),t._v(" "),t._m(279),t._v(" "),t._m(280),t._v(" "),t._m(281),t._v(" "),t._m(282),t._v(" "),t._m(283),t._v(" "),t._m(284),t._v(" "),t._m(285),t._v(" "),t._m(286),t._v(" "),t._m(287),t._v(" "),t._m(288),t._v(" "),t._m(289),t._v(" "),t._m(290),t._v(" "),t._m(291),t._v(" "),t._m(292),t._v(" "),t._m(293),t._v(" "),t._m(294),t._v(" "),t._m(295),t._v(" "),t._m(296),t._v(" "),t._m(297),t._v(" "),t._m(298),t._v(" "),t._m(299),t._v(" "),t._m(300),t._v(" "),t._m(301),t._v(" "),t._m(302),t._v(" "),t._m(303),t._v(" "),t._m(304),t._v(" "),t._m(305),t._v(" "),t._m(306),t._v(" "),t._m(307),t._v(" "),t._m(308),t._v(" "),t._m(309),t._v(" "),t._m(310),t._v(" "),t._m(311),t._v(" "),t._m(312),t._v(" "),t._m(313),t._v(" "),t._m(314),t._v(" "),t._m(315),t._v(" "),t._m(316),t._v(" "),t._m(317),t._v(" "),t._m(318),t._v(" "),t._m(319),t._v(" "),t._m(320),t._v(" "),t._m(321),t._v(" "),t._m(322),t._v(" "),t._m(323),t._v(" "),t._m(324),t._v(" "),t._m(325)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"c-面向对象高级编程（上）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-面向对象高级编程（上）"}},[this._v("#")]),this._v(" C++面向对象高级编程（上）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("C++98")]),this._v(" "),e("li",[this._v("Object Oriented Progrmming, OOP")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<font style="background:yellow">\n')])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"📑目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#📑目录"}},[this._v("#")]),this._v(" 📑目录")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("01.C++编程简介\n02.头文件与类的声明\n\t- 防卫式的声明『Good』\n\t- 区分：基于对象的设计+面向对象的设计\n03.构造函数\n04.参数传递与返回值  \n05.操作符重载与『临时对象』\n06.复习Complex类的实现过程『class中不带指针的设计』\n07.3大函数：拷贝构造，拷贝复制，析构『Big Three』\n08.堆，栈与内存管理\n\t- 区分：Stack对象和heap对象\n09.复习String类的实现过程『class中带指针/引用的设计』\n10.扩展补充：类模板，函数模板，及其他\n11.组合与继承\n12.虚函数与多态\n13.委托相关设计\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"⭐️中英对照"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⭐️中英对照"}},[this._v("#")]),this._v(" ⭐️中英对照")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("区分：\n"),e("ul",[e("li",[e("strong",[this._v("Object Based")]),this._v("『基于对象的设计』")]),this._v(" "),e("li",[e("strong",[this._v("Object Oriented")]),this._v(" 『面向对象的设计』")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[t._v("区分：\n"),s("ul",[s("li",[t._v("class without pointer members『class中不带指针/"),s("strong",[t._v("引用")]),t._v("的设计』")]),t._v(" "),s("li",[t._v("class with pointer members『注意，我们讨论的却是：class中带指针/"),s("strong",[t._v("引用")]),t._v("的设计』")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[t._v("Big Three『记忆』\n"),s("ul",[s("li",[t._v("copy ctor，拷贝构造函数\n"),s("ul",[s("li",[t._v("default copy ctor，默认的拷贝构造函数")]),t._v(" "),s("li",[t._v("非默认的")])])]),t._v(" "),s("li",[t._v("copy assignment operator，拷贝赋值函数『copy op=』（注意：不要翻译成，拷贝复制函数。。。）\n"),s("ul",[s("li",[t._v("default copy op=")]),t._v(" "),s("li",[t._v("非默认的")])])]),t._v(" "),s("li",[t._v("dtor，析构函数")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("重载"),e("code",[this._v("<<")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_01-c-编程简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-c-编程简介"}},[this._v("#")]),this._v(" 01.C++编程简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("面向对象是1个"),e("strong",[this._v("观念")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-1-应该具备的基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-应该具备的基础"}},[this._v("#")]),this._v(" 1.1.应该具备的基础")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710140800201.png",alt:"image-20210710140800201"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("•作用域 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scope"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t『比如说，"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("里面的变数在里头的生命』\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-2-我们的目标✅"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-我们的目标✅"}},[this._v("#")]),this._v(" 1.2.我们的目标✅")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710140924654.png",alt:"image-20210710140924654"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("培养正规的、大气的編程習慣『"),e("strong",[this._v("即使是小的程序，我们也希望，一出手就是有大家规范的正规的写法")]),this._v("』")])]),this._v(" "),e("li",[e("p",[this._v("要引导大家以良好的习惯来写C++的class，因为C++代码中最重要的每一个单元都是1个class")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("class有2个很经典的分类：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("又有一个名字："),e("strong",[this._v("Object Based")]),this._v(" (基於對象)基于对象")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("• 以良好的方式编写\t \n    C++ class『为什么写class呢？因为C++代码里面，每一个单元，最重要的一个单元就是一个class』\n    class有下面2个很经典的分类：带不带pointer『这2种在设计上、思考上截然不同』？？或许是拷贝？\n    \n• class without pointer members\n— Complex\n    \n• class with pointer members\n— String\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("又叫：Object Oriented (面向對象）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[e("strong",[this._v("你将获得的代码")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("complex.h\ncomplex-test.cpp\n\nstring.h\nstring-test.cpp\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br"),e("span",{staticClass:"line-number"},[this._v("3")]),e("br"),e("span",{staticClass:"line-number"},[this._v("4")]),e("br"),e("span",{staticClass:"line-number"},[this._v("5")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-3-c-演化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-c-演化"}},[this._v("#")]),this._v(" 1.3.C++演化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710141535846.png",alt:"image-20210710141535846"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("C++ 語言 (1983) 就有了")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("• C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("『语言真正正规化。是"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1998")]),t._v("年』\n    \n• C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("03")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TR1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Technical Report "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n• C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("『过了"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("年才有"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("，中间有一些小的版本』\n• C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v("『"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2014")]),t._v("年又有一个小版本』\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("本课程讲解：目前大部分在业界，大部分的程序员所使用的，其实大家不必太在乎版本。")]),this._v(" "),e("p",[this._v("大部分所用的几乎都是C++98，2011的这个版本出现了很多新的关键字、新的概念、在标准库上也出现了很多新的工具、东西来用。也许太新了『本课程现在才2015年』，所以使用这个新特性的人并不是太多。")]),this._v(" "),e("p",[this._v("所以，本课程讲解的都是C++最基础的东西，C++98就有了")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710141746354.png",alt:"image-20210710141746354"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-4-学习c-是学什么？『2部分』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-学习c-是学什么？『2部分』"}},[this._v("#")]),this._v(" 1.4.学习C++是学什么？『2部分』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("C++语言")]),this._v(" "),e("li",[this._v("C++标准库")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("我要传达的概念是：现在语言越来越复杂，所以他们的标准库给大家的东西也是『越来越多』，那使用这些标准库，也是一些非常重要的一些事情。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("我们这门课：我们主要谈论语言，我们用到『标准库』，只有一些最简单的一些东西的输出。实际上，标准库是非常庞大，非常有用的。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可以说：如果你是C++程序员，如果你不怎么去用标准库的话，你不能算是一个合格的、好的程序员、有生产力的。")]),this._v(" "),e("li",[this._v("当你发现：在学生时代/进入业界，开始大量的写你们的大型的语言的，你就会知道标准库的重要性。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-5-书籍推荐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-书籍推荐"}},[this._v("#")]),this._v(" 1.5.书籍推荐")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210711162749553.png",alt:"image-20210711162749553"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("课程开始前，介绍经典书籍")]),this._v(" "),e("li",[this._v("语言部分，上面是卖得最好、读者最多的百科型全书C++")]),this._v(" "),e("li",[this._v("经常，我们学1个东西，我们都要学习一下某某之父写的东西『就是右边这本』")]),this._v(" "),e("li",[this._v("『左边的书，是C++第1个编译器的作者写的书籍』，所以也有相当的说服力。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712204753316.png",alt:"image-20210712204753316"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("学了语言之后，其实很希望得到专家的建议。在这个里面呢，我也扮演这种角色，告诉你什么东西该写，什么东西怎么样写比较好。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712204818794.png",alt:"image-20210712204818794"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("刚刚，我们说完『语言』，语法和语义")]),t._v(" "),s("li",[t._v("我们现在说『标准库』， 我也看过很多这方面的书，很推荐左边这一本。")]),t._v(" "),s("li",[t._v("当然，深入下去，想看一下源代码，这种书就很少。右边，源代码解析")]),t._v(" "),s("li",[t._v("这条路很遥远了，不解释太多")]),t._v(" "),s("li",[s("strong",[t._v("STL其实就是标准库的前身")]),t._v("。可以想象标准库中，70-80%以前叫作STL『简单这样理解』")]),t._v(" "),s("li",[t._v("只讲了这么点：肯定有遗珠之憾。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_02-头文件与类的声明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_02-头文件与类的声明"}},[this._v("#")]),this._v(" 02.头文件与类的声明")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("『现在，咋们"),e("strong",[this._v("正式进入“语言”的部分")]),this._v("』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710142207614.png",alt:"image-20210710142207614"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("首先拿C和C++在『函数』和『数据』上角色的不同，进行比较。")]),t._v(" "),s("li",[t._v("C语言中那样设计：数据和函数，这样的缺点：由于语言没有提供足够的关键字，所以这些数据一定是全局的，所以大家『所谓大家就是各个函数』都可以去处理它们，这样它们对后面会有影响的，甚至是很大的影响。所以发展出面向对象语言C++")]),t._v(" "),s("li",[t._v("C++是第1个最有名的面向对象语言，想法是什么呢？就是把数据还有处理这些数据的函数包在一起。你的数据只有这个函数才能去处理它。其他人看不到。这样不会混杂在一起，")]),t._v(" "),s("li",[t._v("其实class也就是C中的struct结构。只不过，**C++使用了更多的特性在里面，使用了『更多的关键字』**让我们去使用这些特性。")]),t._v(" "),s("li",[t._v("C++也有struct，几乎等同于class，它也引用一些很好的特性。『这两者之间有一点点和微小的差别』")]),t._v(" "),s("li",[t._v("好：数据和函数包在一起。将来怎么使用呢？以这1个为类型，为1种形式，我们创建出很多对象。然后在这个对象里面，然后去创建")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710142525088.png",alt:"image-20210710142525088"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("刚刚说过：对class的分类。最经典的分类：")]),this._v(" "),e("p",[this._v("1、里头带着指针『这个导致了，里头的指针，指向的内容在另外1个空间，然后Big Three』")]),this._v(" "),e("p",[this._v("2、里头不带指针")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("『这个会影响后面的写法，"),e("strong",[this._v("影响深远")]),this._v("』（重点知识）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这1页，告诉大家，当你去思考你"),e("strong",[this._v("要设计1个类。它里面是有1个指针")]),this._v("。你要非常小心。但是，我们现在要讨论的是没有指针的1个class这种先。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-1-obp和oop模式的对比⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-obp和oop模式的对比⭐️"}},[this._v("#")]),this._v(" 2.1.OBP和OOP模式的对比⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710142633224.png",alt:"image-20210710142633224"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("然后，关于『单个class』的分类")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"img/C++%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%EF%BC%88%E4%B8%8A%EF%BC%89/C++OOP%E4%B8%8A_15.jpg",alt:"C++OOP上"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("对1个class的设计，我们举例『复数和字符串』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-2-代码格式⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-代码格式⭐️"}},[this._v("#")]),this._v(" 2.2.代码格式⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710143019437.png",alt:"image-20210710143019437"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("在正式开始写程序之前。我们来谈一谈1个C++代码的基本形式：你会看到别人写的，以及你即将看到自己写的。")])]),t._v(" "),s("li",[s("p",[t._v("头文件"),s("code",[t._v(".h")])])]),t._v(" "),s("li",[s("p",[t._v("主程序"),s("code",[t._v(".cpp")]),t._v("『主程序如何去使用头文件，就用#include方式，其实"),s("code",[t._v(".h是.cpp")]),t._v("的1部分，只是因为"),s("strong",[t._v("角色的区分")]),t._v("。所以才把它分离开了，另外咋们的程序也可能会使用到标准库，"),s("strong",[t._v("标准库也是以头文件的形式提供的")]),t._v("，用"),s("code",[t._v("<>")]),t._v("的写法，至于标准库放在你硬盘的哪个地方，你不用管，因为你在安装你的集成环境的时候，编译器有些步骤")])]),t._v(" "),s("li",[s("p",[t._v("唯一的区别：")]),t._v(" "),s("ul",[s("li",[t._v("引用标准库的东西，用"),s("code",[t._v("<>")])]),t._v(" "),s("li",[t._v("引用你自己写的东西，用双引号『面试时候的区别，不是根据这个的』")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-3-编程习惯-防卫式声明⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-编程习惯-防卫式声明⭐️"}},[this._v("#")]),this._v(" 2.3.编程习惯-防卫式声明⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("大家写的任何1个头文件，都要写上一个，类似这样的"),e("strong",[this._v("防卫式的声明")]),this._v("！")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710143449129.png",alt:"image-20210710143449129"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("写一个复数，应该放在头文件里面。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("头文件的写法：有1种正规写法『这个1拿出去，大家一看，你是受过正规训练的』\nQ 为什么要写这个东西呢？ \nA 因为很多程序可能会用到你这个头文件，或者你自己的程序也分成很多文件，也可能会被#include用到这个文件。\n#include含进的次序，如果说要求用的人它必须，先includeA然后是B然后是C，那么这个对于使用者来说，负担太沉重。\n\n对它而言，想要include谁都没关系，次序都没有关系。\n所以，为了这样，我们要写1个防卫式的声明。\n语法如下\n- 代码解释：1进来，如果不曾经定义过这个东西的话。那么就把它定义出来\n- 第2次引用的时候，这个名词就引用过了，，我们下面写的代码，就不会被进去。『 这样就不会用重复的include的动作』\n- 一般初学者不会去考虑这个，但是未来进入业界，正式写大的东西的时候，要记得我刚刚说的话！！\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-4-header（头文件）的布局⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-header（头文件）的布局⭐️"}},[this._v("#")]),this._v(" 2.4.Header（头文件）的布局⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710143824490.png",alt:"image-20210710143824490"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("写完，防卫式声明。中间1块，我们要放什么呢？？我们分为0、1、2这样的3个部分。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("『最主要是1和2』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712204956474.png",alt:"image-20210712204956474"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("注意：有些函数在此，在本体body中直接定义。但是你也可以不在这里定义，你把他们**『全部』放在这里定义，OK。**")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("上面 opeartor+=函数没有{}，只是1个『声明』而已\n下面2个函数，有{}，是定义\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("任何1个class，一定有个头（head）单独这1行")]),t._v(" "),s("li",[t._v("大括号"),s("code",[t._v("{ }")]),t._v("包起来的，这个叫"),s("strong",[t._v("class body")])]),t._v(" "),s("li",[t._v("这里面，你就开始要去设计，我的复数应该要具备什么样的数据、我应该要准备什么样的函数，才能去满足，使用复数的人的需求，比如共轭复数，设计结果如上。")]),t._v(" "),s("li",[t._v("然后，还有个奇怪的『friend』，你可能要设计另外1个类，另外1个单元，另外1个函数，说它要和它之间是1个朋友的关系。这些都是后面要提的")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205022063.png",alt:"image-20210712205022063"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("C++为了让你能避免重复，引出了解决这种需求的方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_03-构造函数-ctor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_03-构造函数-ctor"}},[this._v("#")]),this._v(" 03.构造函数(ctor)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("constructor（ctor，构造函数）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-1-inline-内联-函数⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-inline-内联-函数⭐️"}},[this._v("#")]),this._v(" 3.1.inline(内联)函数⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710145314082.png",alt:"image-20210710145314082"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("到底什么是inline呢？有什么好处？")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("但是你的inline只是对编译器的一个建议而已，是不是真的变成Inline，由编译器决定")]),this._v("。『如上，PPT中那2个函数是inline 函数，但最终会不会变为inline function，不知道！！』，但我们看那个地方，这2个函数是如此的简单，想必编译器是有能力把它变为inline。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：上头那个函数，是在本题的『外头，定义的，但是我在『外头，给它也写了inline』，告诉编译器，你尽量帮我Inline。『注意：反正后面不在本体内定义的，我们可以加inline』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-2-访问级别-access-level-⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-访问级别-access-level-⭐️"}},[this._v("#")]),this._v(" 3.2.访问级别(access level)⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710145557644.png",alt:"image-20210710145557644"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("什么东西需要放为private的呢？当然是数据！因为我们希望，数据封装的，不要被外界任意看到，应该只有自己才能看到。")]),this._v(" "),e("li",[e("strong",[this._v("那么函数的部分呢？『也可以分2种，1种是要给外界用的，1种只是我处理私人事务的时候要做的』")])]),this._v(" "),e("li",[this._v("其实有第3种，叫protect保护的，但我们在例子里面不说他们。")]),this._v(" "),e("li",[this._v("上面的，访问区域段，可以任意出现顺序也可以交错")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("好的编码习惯：")]),this._v(" "),e("p",[this._v("『"),e("strong",[this._v("注意，数据一定，要通过它们的兄弟，它自己的函数来传递出去或者被设定，1个读，1个写，不能那样直接被外部拿或者写")]),this._v("』 除非，那个数据是public，但我们就是要避免这个事情！")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205151034.png",alt:"image-20210712205151034"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("构造函数，是个大主题。")]),this._v(" "),e("li",[this._v("C++这个语言说：如果你想要创建1个对象，1个东西，有1个函数会被自动调用起来，不需要你调用，它自动就起来。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、有参数的创建对象\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、无参数的创建对象\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、动态的创建对象\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("构造函数，能写默认参数！这个没什么特别，其他的函数也可以写出默认值出来")]),this._v(" "),e("li",[this._v("构造函数特点的地方：名称、没有返回值类型『因为构造函数就是用来创建对象的，所以你不必写，你写，我还怕你写错』、")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("初始化列（"),s("strong",[t._v("initialization list")]),t._v("）和写在"),s("code",[t._v("{}")]),t._v("的assignments（赋值）的区别『简单说』，其实背后还有很多原理：")])]),t._v(" "),s("li",[s("p",[t._v("1个东西，它的数值的设定，有2个阶段。")]),t._v(" "),s("ul",[s("li",[t._v("1个是初始化")]),t._v(" "),s("li",[t._v("1个是后面再赋值。")])])]),t._v(" "),s("li",[s("p",[t._v("第1阶段，就是我们的『初始化列")])]),t._v(" "),s("li",[s("p",[t._v("第2阶段就是在"),s("code",[t._v("{ }")]),t._v("里面去赋值。")])]),t._v(" "),s("li",[s("p",[t._v("如果你不在『初始化中做』而是在{}中写，表示你放弃了『初始化的那个阶段』，虽然最后你还是把值放进去了。实现得晚，效率也差一些。")])]),t._v(" "),s("li",[s("p",[t._v("注意：你不可能在你的程序里面去『直接调用你的构造函数』，这不可能，没有这种语法。你只是要创建对象。")])]),t._v(" "),s("li",[s("p",[t._v("而创建对象上面3个都是例子，这个函数就自然而然的调用起来。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-3-class-『without』-pointers-members的特点⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-class-『without』-pointers-members的特点⭐️"}},[this._v("#")]),this._v(" 3.3.class 『without』 pointers members的特点⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205248623.png",alt:"image-20210712205248623"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("构造函数可以有很多个！")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("重载：overload单词记住！！大厂总是说英语术语。。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("上面的PPT，我们每次1和2组成一组！")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("real上面的，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("号取得值，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("号设定值、这样写可以吗？？ \n    可以。因为函数可以重载，『注意，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("号那个"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("肯定要划掉，因为是设定值。。。』\n    目前我们没讲"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n    \n注意：可能很好奇，为什么同名函数可以"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个以上，既然一样的名称，将来调用的是谁呢？\n    其实编译器会把这些函数编成，右下角那个样子，只有编译器看得懂。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[t._v("原因：\n"),s("ul",[s("li",[t._v("因为1号有默认参数，我们创建代码中，1和2都是没有给参数，写法虽然不一样，但是意思相同。")]),t._v(" "),s("li",[t._v("『左边的——2里面没有参数，所以可以候选，而1呢，虽然有参数，但是有默认值，感觉也可以调用，")]),t._v(" "),s("li",[t._v("编译器一看，2和1都可以调用，编译器会犯傻（也就是二义性！！）")]),t._v(" "),s("li",[t._v("『这种情况下，"),s("strong",[t._v("左边的2不允许被再写！！")]),t._v("』")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("函数重载，常常发生在『构造函数』身上，注意上面那种例子的函数！！不能那么写，因为冲突了")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_04-参数传递与返回值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_04-参数传递与返回值"}},[this._v("#")]),this._v(" 04.参数传递与返回值")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-1-构造函数如果是private？⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-构造函数如果是private？⭐️"}},[this._v("#")]),this._v(" 4.1.构造函数如果是private？⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("面试考点：放到private区域，面试常常和『单例模式，放在一起』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205341235.png",alt:"image-20210712205341235"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("传递啥意思？？")]),t._v(" "),s("li",[t._v("放在private区域的函数，表示这个函数是不可以被调用的！！『被外界调用』")]),t._v(" "),s("li",[t._v("注意：我们下面，外界说：我要创建1个这种对象，构造函数就要被调用起来，可是构造函数又放在private中，不可以被构造啊，，所以这2个动作都是不可以的！！")]),t._v(" "),s("li",[t._v("Q   那可见，不应该有人把构造函数放在private区域咯？？？")]),t._v(" "),s("li",[t._v("A：也不是，既然提出来了，表示会有人这么做！什么情况要这么做呢？？")]),t._v(" "),s("li",[t._v("『就是，我不允许被外界创建对象！！』那这样，这个class有什么用？？？")]),t._v(" "),s("li",[t._v("下面是一个经典的写法！")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205411584.png",alt:"image-20210712205411584"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("这是1个设计模式！！最简单的1个设计模式，我们不懂没关系!")]),this._v(" "),e("li",[this._v("但是设计模式中，有1个叫作“单例模式”，它就用到了我们刚刚所说的那一种，那一种写法『构造函数放在private中』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("演化意思就是单例。意思是，我设计这个A呢，我只要一份，外界只能用1份，所以它才不允许外界重建，那么那一份在哪里呢？？『"),e("strong",[this._v("那1份在黄色的部分")]),this._v("』是static的，我们还没有谈到static的特性。但我告诉你，它里头自己准备了一份自己。。各位看下面，"),e("code",[this._v("static A a")]),this._v("，，它的里面有个自己『然后，"),e("strong",[this._v("外界要的时候，不能够用那种传统的创建方式")]),this._v("，，，』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("要通过"),e("code",[this._v("A::getInstance().setup();")]),this._v("这个")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("构造函数讲完了，现在我们继续分析，在class的本体Body中，还有些什么要注意的呢？？")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-2-const成员函数？-奇怪的语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-const成员函数？-奇怪的语法"}},[this._v("#")]),this._v(" 4.2.const成员函数？-奇怪的语法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/C++OOP%E4%B8%8A_28.jpg",alt:"C++OOP上"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("函数这个部分，这一件事情是很多很多人会忽略的，包括你可能写了很多年的程序，你都会忽略。这个事情。但是它非常重要。『就是，"),e("strong",[this._v("在函数的后头加const，，一定要加在这个位置哈：小括号()的后面，大括号{}的前面")]),this._v("』")]),this._v(" "),e("li",[this._v("『我现在要引导你去想一件事情：对class立面的函数，有分为会改变数据的和不会改变数据的，2种。，，不会改变数据内容的，马上加上const。』所以，const函数的意思就是，我不改变数据的内容。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"『后果』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#『后果』"}},[this._v("#")]),this._v(" 『后果』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("可能写成，"),e("code",[this._v("const class名字 对象")]),this._v("和"),e("code",[this._v("class名字 const 对象")]),this._v("，，意思是说：我这个对象或者说是变量的内容，一定是不动的，不可以改变的。『万一，我用这种对象去调用去调用它的成员函数，万一你没有写const会是什么意思？？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("关于：const用来修饰这个函数，像这样，修饰变数，"),e("strong",[this._v("const用来修饰函数的这个主题呢，还有很多事情要讨论。不过目前这样就可以了，我们就可以继续下去。")])])]),this._v(" "),e("li",[e("p",[this._v("我们这样写，就很"),e("strong",[this._v("正规『可能你会想，如果使用者不这么用的话，就不会出错啊，，，但是我们要想得更周全一些")]),this._v("。』")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205509284.png",alt:"image-20210712205509284"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("这个主题，也是我们在判断，你写的代码，也许可以，你的程序也许可以运作，但是你有没有受过好的正规训练。『我会看123，某几个点，这个就是其中一个点，就是你参数的传递呢，是pass by value，，有没有用到pass by reference")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("它的形式是这样的：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("解释by value和by reference")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("黄色圈起来的，全部都是参数，任何人要调用他们的时候，都药把东西传进去，这个叫pass传递参数。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("&这个符号，在这不是取地址的意思。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("『标题上：pass by reference (to const)，，标题上上，也"),e("strong",[this._v("可能不是const『就是我们PPT中的2-7这种情况")]),this._v("』』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("『标题上说的3种情况，在这都出现了』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("By value，就是整包传递过去了。。这个value多大，它就整包都传递过去了。传的动作，其实是压到函数的stack栈中。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("By reference，")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("『我们要养成习惯，尽量不要pass by value！！！因为怕传递得太大了』那这样的时候，我们怎么办？？过去C语言可以传递指针，，这包东西太大了，我传递个地址吧。所以，很快。。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("『然后，现在呢，我有一个东西呢，像指针，但是更加漂亮，C++的就是reference引用，，，引用看起来摸不着。。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("『"),e("strong",[this._v("给你建立概念：引用在底部就是一个指针！！所以，传引用就相当于传递指针那么的快，但是它的形式又很漂亮")]),this._v("。。』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("PS：C语言的经验，指针传递过去，那边那个函数一旦修改，就会影响我了，因为，我们是传递指针。那传递引用也有这个效果！！！是不是呢要的呢？有时不是。。")]),this._v(" "),e("li",[this._v("『如果传递过去，只是为了速度，并不希望你改就该我，我可以传递refernence to const、、我传给你，但是你不能去修改这个内容。因为你一旦修改，就会影响我。。。。"),e("strong",[this._v("如果你改了，编译就会出错")]),this._v("！！！』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("结论：参数传递，"),e("strong",[this._v("尽量")]),this._v("都穿引用『当然，char啥的，随便你，，，")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205536615.png",alt:"image-20210712205536615"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("延续前面的话题，用来作为返回值的传递。")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("这个地方很小，但是会影响到，C++程序的效率，为什么你会选择来学C++，多半是，你考虑到它的效率")]),t._v("，它的效率比其他的面向对象语言，更快。所以，"),s("strong",[t._v("我们在每一个影响效率的小节上，我们都要注意：把它内化成，我们的习惯")]),t._v("。』")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("现在说，返回值的传递，也尽量by reference』尽量的前提，当然是，如果可以的话")]),t._v("。也有不少情况是不可以的！！在谈了这个主题之后的后面会出现。")]),t._v(" "),s("li",[t._v("尽量的：是在可以的情况下！！什么是可以，不可以，我们在后面讨论！！")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205608505.png",alt:"image-20210712205608505"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"『友元』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#『友元』"}},[this._v("#")]),this._v(" 『友元』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("我们身上的钱，任何人可以来拿吗？当然不行。。朋友可以来拿吗？看你在现实生活中如何定义")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("朋友太多了，是不是会有困扰。。。显示不知道，但是在C++中强调封装。朋友的话，就打开一个封装的大门。。")]),this._v(" "),e("li",[this._v("所以：用朋友的设计还是非朋友的设计，看你自己")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205631574.png",alt:"image-20210712205631574"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("结论：")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("有一个问题，常常被提起，甚至于很多年工作经验的程序员，也会被提起。"),s("strong",[t._v("它可能在日常生活中已经习惯怎么写了，它知道这样写是对的，可是它解释不出来")]),t._v("！！")]),t._v(" "),s("li",[t._v("『上面的黄色部分函数：这个函数"),s("strong",[t._v("是处理另外一个复数。。。竟然是直接拿，没有透过函数")]),t._v("』这不是破坏了封装性吗？也没有出现friend的字眼。个位整理一下，现在是什么情况？？")]),t._v(" "),s("li",[t._v("很多个角度去解释：")]),t._v(" "),s("li",[t._v("1、相同的class做出来的对象，彼此互为友元『解释了，这个行为看起来打破了封装，但是其实是成立的』")]),t._v(" "),s("li",[t._v("2、有的人解释这个事情，不是用这句话。。也解释得通，但是我想这句最好。。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205710331.png",alt:"image-20210712205710331"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"『习惯』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#『习惯』"}},[this._v("#")]),this._v(" 『习惯』")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("注意：")]),t._v(" "),s("li",[t._v("1、数据一定放在private里面")]),t._v(" "),s("li",[t._v("2、参数尽可能用reference来传，能不能cosnt看情况")]),t._v(" "),s("li",[t._v("3、返回值一样")]),t._v(" "),s("li",[t._v("4、在类的本体中，这些函数应该加const就要加，不然，使用者可能会报错！！\n"),s("ul",[s("li",[t._v("5、构造函数，有个特殊的语法，初始化列，那个要尽量去用它。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("什么情况是不能return by reference??")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("一个函数的操作结果，要放在什么位置上呢？？如果函数必须创建一个地方来让他放！『下面2种』")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("1、如果返回的，是放在一个你"),s("strong",[t._v("本来已经有")]),t._v("的空间上面。。『可以传递引用』")]),t._v(" "),s("li",[t._v("2、如果函数必须创建一个地方来让他放！!这个东西，返回之后，生命消失了，"),s("strong",[t._v("『这个就不能return by refernce』")]),t._v("『"),s("strong",[t._v("除了这种情况，我们都可以去传递引用")]),t._v("』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_05-操作符重载与『临时对象』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_05-操作符重载与『临时对象』"}},[this._v("#")]),this._v(" 05.操作符重载与『临时对象』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205809562.png",alt:"image-20210712205809562"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("操作符重载：：是个很大很大的问题、是一个C++的很大的特性！！")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("先讲：操作符重载之1『等会有之2』")]),t._v(" "),s("li",[t._v("1和2的区别：成员函数或者是非成员函数。")]),t._v(" "),s("li",[t._v("『看右边：我们分析"),s("strong",[t._v("操作符是怎么被编译器所看待的！！！『重要")]),t._v("』』")]),t._v(" "),s("li",[t._v("二元操作符：我"),s("strong",[t._v("们通常会讲左数和右数。『编译器看到蓝色箭头哪一行，它会把符号作用在左边身上")]),t._v("。。如果左边的这个东西有趣对这个符号做定义的话，编译器就找到了。。。把这一行就编译成要去调用那个函数。")]),t._v(" "),s("li",[t._v("『我把它隐藏的东西挖出来给你。。』所有的成员函数一定带着一个隐藏的参数，这个参数叫作this。。")]),t._v(" "),s("li",[t._v("『取这个名字的原因是：谁调用我，谁就是this』this是我们写代码不必写，也不能写，你写出来就错了。。")]),t._v(" "),s("li",[t._v("『注意，这个this指针我现在把它显示出来放在第一个参数，一定是这样吗？？不一定，不同的编译器行为都不一样，有的会把它在最后一个参数去。反正我们写代码看不到，不影响我们写代码』但是放在哪里都无所谓，反正有这么一个东西。")]),t._v(" "),s("li",[t._v("+=啥意思，右边加到左边身上去。『左边框框那样写的原因，相比是左上角的，其他地方也会这么用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205845871.png",alt:"image-20210712205845871"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("引用。黄色部分，return *this对象，但是"),s("strong",[t._v("接收端")]),t._v("却用引用，这样对吗？？『可能的语法疑问』"),s("strong",[t._v("『易错")]),t._v("！！』")]),t._v(" "),s("li",[t._v("对的！！原因**：用引用传递的好处：传递者无需知道接受者，是以引用的形式接收**。")]),t._v(" "),s("li",[t._v("如果用指针传递：传递者必须知道现在传递的什么，要有个特殊符号。。")]),t._v(" "),s("li",[t._v("设计：或许你说，左下角的，你可能会返回类型是void，好像也可以。如果使用者只有单个这么用，那当然可以。但是『使用者』可能会这么用连串的+=，所以，我们这个时候就不能返回void了")]),t._v(" "),s("li",[t._v("因为，加完之后还要当成右值。『当使用者没有连串使用的时候，OK，如果连串使用的话，是需要另外思考的』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205917907.png",alt:"image-20210712205917907"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("本体以外的部分，要么是：类的成员函数外界定义，要么是：全局函数")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712205944769.png",alt:"image-20210712205944769"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_5-1-临时对象』重要"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-临时对象』重要"}},[this._v("#")]),this._v(" 5.1.临时对象』重要")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210024224.png",alt:"image-20210712210024224"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("考量：他们返回的，为什么不是引用，为什么最优先考量的不是引用呢？")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("为什么绝对不可以？？因为他们返回的必定是个『局部变量，，』先前是没有那个东西的，是在函数中创建")]),t._v("的』")]),t._v(" "),s("li",[t._v("自己死掉了，外界如果引用，就用到了错误的东西。")]),t._v(" "),s("li",[t._v("注意：不是说要在函数里面创建个东西吗？？这里好像没有看到。。这里有个特殊语法！！")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"『临时对象特殊语法』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#『临时对象特殊语法』"}},[this._v("#")]),this._v(" 『临时对象特殊语法』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("tyname()")]),this._v("这种写法，在"),e("strong",[this._v("标准库中其实很常见")]),this._v("到  !!!『STL源代码中有？？』")]),this._v(" "),e("li",[this._v("我们必须熟悉他们。。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("就好像 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    过去你习惯的是"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i\n    然后你去用这个i\n    现在是不一样！！\n    \n    现在，我们的是"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v("直接加小括号，只不过里头有参数就是了。。\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" 加上"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("就是要创建临时对象，，什么叫临时对象呢？？就是我临时才要的，我不想给他名称。。\n    它的生命到下一行就结束了。。\n    那么，下一行就结束了，而且没有名称，适合我们现在这样的用法吗？？适合。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『我们看右边，注意！黄色的部分，其实其实也是临时对象！！其实它的语法，就是左边！！")]),this._v(" "),e("li",[this._v("『这个语法所谓"),e("strong",[this._v("特殊呢。。一般人少用，但是标准库用得很多！")]),this._v("！』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210101450.png",alt:"image-20210712210101450"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("上面那个不是加号，『是正号！！』数学上表示一个的，就是表示正号。")]),t._v(" "),s("li",[t._v("正号的，那个其实应该可以传回引用、。。标准库这么写，，为什么呢？？会写错吗？？")]),t._v(" "),s("li",[t._v("标准库这么厉害的，会写错吗？？那个很难说。。。"),s("strong",[t._v("它比没有错，。只是写得不是最好的")]),t._v("！！『下载习题，自行尝试，我相信是可以的』")]),t._v(" "),s("li",[t._v("注意："),s("strong",[t._v("标准库的那些很棒的人。他们所写的标准库，并不是圣经。不是说它绝无挑剔之")]),t._v("处。。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210144391.png",alt:"image-20210712210144391"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("接下来")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210212112.png",alt:"image-20210712210212112"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"『重载-操作符的特殊』『易错』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#『重载-操作符的特殊』『易错』"}},[this._v("#")]),this._v(" 『重载"),e("code",[this._v("<<操作符")]),this._v("的特殊』『易错』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("任何一个操作你都有2种想法，设计为全局（全域）函数or成员函数")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210301277.png",alt:"image-20210712210301277"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("既然，<<的重载，"),s("strong",[t._v("是把右边输出到左边身上")]),t._v("！！")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("cout<<会把<<符号作用到左边身上！！！是不可能作用到右边身上的！！C++的语法就没有这种作用到右边身上的这种语法！！")]),t._v("！』")]),t._v(" "),s("li",[t._v("左边是什么？？是标准库定义的一种东西，我们现在不去深究他们，你把他们想象是代表屏幕，要输出到屏幕上去。这个是标准库早就写好了，可能是10年前写好的，不可能认识你写的class，所以，对于『"),s("strong",[t._v("operator <<』读作『output operator")]),t._v("』我们"),s("strong",[t._v("绝对不要把这种操作符写成一个成员函数")]),t._v("！！『注意注意：这种特殊的操作符重载，你没得选，你只能选一种。。不能写成成员函数！！！就是全局的那种，"),s("strong",[t._v("原因刚刚告诉")]),t._v("你了！！！』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("operator <<")]),this._v("这个中间有没有空格无所谓！！提过，C++和C语言都是free firmat，自由形式。你要加几个空格都无所谓！！！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("本来返回值或许是void可以，但你如果想得远一点，你的使用者如果是一种连串的输出。。你就得引用了『"),e("strong",[this._v("设计者的角度，牛皮")]),this._v("』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_06-复习complex类的实现过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_06-复习complex类的实现过程"}},[this._v("#")]),this._v(" 06.复习Complex类的实现过程")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("章节总复习。")])]),this._v(" "),e("li",[e("p",[this._v("设计一个class的注意：")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1、构造函数的初始化列表：不会用的话，可能训练不太精良，虽然最后结果可能一样。\n2、函数应该要加const就加，万一该加没见，可能会有副作用\n3、参数的传递，尽量referen ce，而且要不是const要考虑\n4、return要不要refernce\n5、『数据尽可能的放在私有里面，几乎没有例外啊！！！』函数绝大部分，要放在public，当然单例就，，\n因为你的函数主要是被外界调用。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("完整的范例程序是标准库写的，我拿出来，拿掉一些没学的，你得到的范例程序会多很多。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210336851.png",alt:"image-20210712210336851"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("在类的里面写出来『定义』的，已经是inline了，，你要写个inline去建议！！")]),this._v(" "),e("li",[this._v("没有写出来的，我们可以让他是inline函数，如下，整个函数 的全名是"),e("code",[this._v("Complex::operator +=")])]),this._v(" "),e("li",[this._v("『至于+=的左边和右边，左边是作为一个隐藏的参数放进来，我们直观右边』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210404912.png",alt:"image-20210712210404912"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("下面")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210430019.png",alt:"image-20210712210430019"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("设计全局函数，然后我们和谷歌想法一样设计为inline")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210453996.png",alt:"image-20210712210453996"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("注意：红线的，尽量要避免！！！完全违背过去使用的习惯")]),this._v(" "),e("li",[this._v("是可以写出来这样用！！但是使用者可能会很惊讶。。它不喜欢这样，它应该避免。『正是因为这样，操作符这种，只好把它写成非成员函数？？』『23分钟』")]),this._v(" "),e("li",[this._v("**乍看置下：好像OS不会被改变，如果你基础不够的话。。其实它会改变，它的状态会改变。但是必须是有经验的人，或者是你必须去查手册才会知道。。。因此传进来的时候，**不能是consrt")]),this._v(" "),e("li",[this._v("你将获得的代码")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("complex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h\ncomplex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpp\n    string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h\nstring"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpp\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"『class之不带指针部分讲完』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#『class之不带指针部分讲完』"}},[this._v("#")]),this._v(" 『class之不带指针部分讲完』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("下面开始带指针的分类！！！")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_07-big-three⭐️『class-with-pointer-memberes开始』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_07-big-three⭐️『class-with-pointer-memberes开始』"}},[this._v("#")]),this._v(" 07."),e("code",[this._v("Big Three")]),this._v("⭐️『class with pointer memberes开始』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_7-1-记忆3大函数：拷贝构造函数，拷贝赋值函数，析构函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-记忆3大函数：拷贝构造函数，拷贝赋值函数，析构函数"}},[this._v("#")]),this._v(" 7.1.记忆3大函数：拷贝构造函数，拷贝赋值函数，析构函数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("我们接下来要谈的是另外一个经典的例子，这个例子是里面带着指针的，那这种情况常发生吗？")]),this._v(" "),e("li",[this._v("常发生啊，我要拿string字符串来作为我们讲解的对象。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710153858136.png",alt:"image-20210710153858136"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("下面3个特殊函数『就是框框框起来的4个中后3个』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710161002475.png",alt:"image-20210710161002475"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("构造和析构函数")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710161307085.png",alt:"image-20210710161307085"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("所以强调一点，你的class如果里头有指针，多半你就是要做动态分配！！！！")]),this._v(" "),e("li",[this._v("像这样，你既然做了动态分配，那么这个对象要死亡之前的前一刻，析构函数会被调用起来，你就必须在虚构函数这里面把你动态分配。被它的内存释放掉")]),this._v(" "),e("li",[this._v("Big three啊，我们已经刚刚讲的构造函数算big three吗？不是!!!!")]),this._v(" "),e("li",[this._v("记忆：内存泄漏（memory leak）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710161438991.png",alt:"image-20210710161438991"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("拷贝构造函数")]),t._v(" "),s("li",[t._v("copy assignment operator念起来也太长，写起来也太长，所以我就把它写成copy op=")]),t._v(" "),s("li",[t._v("而这一块呢，两个指针指向它，也非常危险，因为将来你改a，d就跟着受影响。所以这一种叫"),s("strong",[t._v("浅拷贝")]),t._v("!!")]),t._v(" "),s("li",[t._v("那什么叫"),s("strong",[t._v("深拷贝")]),t._v("呢？就是我们要去写的这个函数里头要做的事情。")]),t._v(" "),s("li",[t._v("如上，深浅拷贝『面试考。。。！！！』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_7-2-拷贝构造"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-拷贝构造"}},[this._v("#")]),this._v(" 7.2.拷贝构造")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710161525948.png",alt:"image-20210710161525948"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("拷贝赋值函数")]),t._v(" "),s("li",[t._v("好，我们往下看啊，这一页跟你解释为什么你一定要写自己的一个版本。\n我们来看看什么叫做深拷贝。")]),t._v(" "),s("li",[t._v("Q1  这一个函数叫拷贝构造，为什么叫拷贝构造呢？？？？\n这是一个构造函数，因为它的名称跟类的名称相同，所以这是一个构造函数。")]),t._v(" "),s("li",[t._v("Q2  为什么叫拷贝呢？\n因为他收到的参数就是他自己这种类型石头拷贝给石头。人拷贝给人，猪拷贝给猪，所以这个叫做拷贝构造函数。")]),t._v(" "),s("li",[t._v("空间创造出来之后呢，把内容拷贝过去，这个叫深拷贝。")]),t._v(" "),s("li",[t._v("如果你没有写这个函数，编译器给的那个默认版本，只有把指针拷贝过来，那个就是浅拷贝。")]),t._v(" "),s("li",[t._v("那个钱拷贝也就是刚刚这一张图，这是我们要避免的。因为这样造成这一块内存泄漏，又造成这一块很危险，为什么危险？")]),t._v(" "),s("li",[t._v("两个人在看同一个东西！！！这个叫alias，别名的意思，就这一块呢呃又叫a，又叫b，这个叫别名。")]),t._v(" "),s("li",[t._v("你有一个名称是你的姓名，是你的学名，你在。\n家里可能叫三毛，叫这个小华，这是你的小名，是你的别名。")]),t._v(" "),s("li",[t._v("-那么在这个编程里头呢，别名是一件危险的事，要特别注意。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_7-3-拷贝赋值函数『注意概念，非常容易错！』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-拷贝赋值函数『注意概念，非常容易错！』"}},[this._v("#")]),this._v(" 7.3.拷贝赋值函数『注意概念，非常容易错！』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210710163641769.png",alt:"image-20210710163641769"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("学习大家风范")]),t._v(" "),s("li",[t._v("如果你有指针的话，那你要怎么写呢？经典写法就是这样，一、二、三。可是你看到前面还有一个动作，\n这个要"),s("strong",[t._v("功力深厚的人")]),t._v("才会写出这一块啊那你现在一起手就要有一种大家风范，你也要会写这一块。")]),t._v(" "),s("li",[t._v("检测那里，比如，可能是啊因为指针的名称也许变动了啊，或者后将来我们要讲继承的概念啊。")]),t._v(" "),s("li",[t._v("反正会发生，只是你看起来不像有可能发生，所以要去做检测。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_7-4-大师风范-检测是否：『坑点』自我赋值-self-assignment-⭐️⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-大师风范-检测是否：『坑点』自我赋值-self-assignment-⭐️⭐️"}},[this._v("#")]),this._v(" 7.4.大师风范-检测是否：『坑点』自我赋值(self assignment)⭐️⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("优点：如果左边等于右边啊自我负值的话，就直接return ，不做事情了。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("效率高。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("第2件事情是，如果你没有这么做，你现在这么做的话呢，刚刚的解释是效率高？？\n但如果你根本没有想过这要这么写的话，你只写下面一、二、三好像也不会出错啊，"),e("strong",[this._v("所以只是效率的高低而已，是这样吗？")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("strong",[this._v("不是不是")]),this._v("，如果你没有写这两行，"),e("strong",[this._v("甚至于可能结果会出错，不只是影响效率而")]),this._v("已，我们来看看发生什么事情。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("结论：所以我们做一个整理，就是写这个自我赋值不只是为了效率，还是为了正确性，所以这个是非常重要的")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210639595.png",alt:"image-20210712210639595"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("如果你没有写这一块，而你的使用者呢他也没有自我赋值，那也就算了，安全过关侥幸。\n但如果他按他自我赋值的话，你的使用者自我赋值的话，你这边不写这一块是会错的，结果会出错。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"⏳08-堆，栈与内存管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⏳08-堆，栈与内存管理"}},[this._v("#")]),this._v(" ⏳08.堆，栈与内存管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("上一节：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712210702154.png",alt:"image-20210712210702154"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("栈和堆")])]),this._v(" "),e("li",[e("p",[this._v("所谓stack（栈），所谓heap（堆）")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215044905.png",alt:"image-20210712215044905"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_8-1-stack-objects的生命期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-stack-objects的生命期"}},[this._v("#")]),this._v(" 8.1."),e("code",[this._v("stack objects")]),this._v("的生命期")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215119294.png",alt:"image-20210712215119294"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_8-2-static-local-objects的生命期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-static-local-objects的生命期"}},[this._v("#")]),this._v(" 8.2."),e("code",[this._v("static local objects")]),this._v("的生命期")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215200390.png",alt:"image-20210712215200390"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_8-3-global-objects的生命期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-global-objects的生命期"}},[this._v("#")]),this._v(" 8.3."),e("code",[this._v("global objects")]),this._v("的生命期")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215241682.png",alt:"image-20210712215241682"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_8-4-heap-objects的生命期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-heap-objects的生命期"}},[this._v("#")]),this._v(" 8.4."),e("code",[this._v("heap objects")]),this._v("的生命期")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215324099.png",alt:"image-20210712215324099"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("new：先分配memory，再调用ctor")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215425387.png",alt:"image-20210712215425387"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("delete")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215449726.png",alt:"image-20210712215449726"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("new")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215548707.png",alt:"image-20210712215548707"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("delete")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215606153.png",alt:"image-20210712215606153"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"⏳09-复习string类的实现过程『ing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⏳09-复习string类的实现过程『ing"}},[this._v("#")]),this._v(" ⏳09.复习String类的实现过程『ing")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210712215642279.png",alt:"image-20210712215642279"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("动态分配")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722140807162.png",alt:"image-20210722140807162"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("72啦啦啦啦")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722140844945.png",alt:"image-20210722140844945"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("阿凡达")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722140914805.png",alt:"image-20210722140914805"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("哈哈哈")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722140938343.png",alt:"image-20210722140938343"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("cdav磁力搜索")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141007366.png",alt:"image-20210722141007366"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("发大V啊")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141035492.png",alt:"image-20210722141035492"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("你将获得的代码")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("complex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h\ncomplex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpp\n    \nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h\nstring"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpp\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"⏳10-扩展补充：类模板，函数模板，及其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⏳10-扩展补充：类模板，函数模板，及其他"}},[this._v("#")]),this._v(" ⏳10.扩展补充：类模板，函数模板，及其他")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-1-进一步扩展static细节』⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-进一步扩展static细节』⭐️"}},[this._v("#")]),this._v(" 10.1.进一步扩展static细节』⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141202806.png",alt:"image-20210722141202806"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("我们现在谈论的是基于对象的程序设计，也就是写单一的class。")]),t._v(" "),s("li",[t._v("static是什么呢？我们可以这个小主题，好好来熟悉一下"),s("code",[t._v("this-pointer")]),t._v(" "),s("ul",[s("li",[t._v("『当你的程序在很多的class之间走来走去，你要对这个this指针有充分的了解，才能够做到这一点』")]),t._v(" "),s("li",[t._v("『黄色的this你可写，可以不写，如果不写，编译器会给你加上那一行』")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141225582.png",alt:"image-20210722141225582"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("class中静态的数据只有一份，所以我们什么时候，会使用这种静态的数据。\n"),e("ul",[e("li",[this._v("比如，银行的账号体系。『利率就应该设计为static』『静态数据的性质和什么时候要使用它。』")])])]),this._v(" "),e("li",[this._v("什么时候要使用静态的函数呢？？『静态函数的特征和一般的成员函数的特征。。。差别在于静态函数没有this指针。。可见它不能够像一般的成员函数那样去取，去访问去存取去处理这些对象里面的东西，因为它没有this指针。。\n"),e("ul",[e("li",[this._v("那它做什么用？显然它——只能去存取静态的数据，，静态函数如果要去处理数据的话，它只能处理静态的数据、这是环环相扣的，我们体会一下。")])])]),this._v(" "),e("li",[this._v("所以我测试如下：")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("solve")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("solve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("solve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demodemo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tcout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" solve"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改成static int a=777;结果不变")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\tsolve"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pause"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n输出\ndemodemo\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),t._v("\n请按任意键继续"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("易错：")]),this._v(" "),e("p",[this._v("如果你class的数据是静态数据！！『语法上要注意』")]),this._v(" "),e("p",[this._v("你一定要在class的外头，做这样一行动作！！这杨一行动作，有的人叫设初始化，设初值。因为往往会写成这样，会给一个值。。有的人叫声明。不过严格术语来讲，这个叫作定义。。为什么呢？一般我们说，写一行下来，会造成变量获得内存，这一行叫作定义。。所以在这个类里头说。。这个变量是静态的，这个只是声明而一。因为它脱离于将来产生对象，它是属于class的。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("无论如何，我们要记下来一点：静态的数据，在类class的外头要写这样一行东西！！『如何写呢？？如黄色部分，至于要不要给定初值，都可以。。。什么鬼、？？？』『我测试了一下』")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" solve"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改成static int a=777;结果不变")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出的999变成了0.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此外，如果不写哪一行，编译器会报错。。。注意总结")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("此外：静态的函数，它没有this指针，所以它只能去处理静态的数据！！！")]),this._v(" "),e("li",[this._v("『调用static函数的方式有2种，第一种叫作通过对象！！那就和一般的成员函数一样！！『但是，这个编译器不会给我们做this指针那啥，因为只是静态』")]),this._v(" "),e("li",[this._v("第2种就是，我没有对象，也许我的银行才开张，还没有人来开户，但是我的利率得先写』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-2-进一步补充ctors放在private里面『13分钟半』"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-进一步补充ctors放在private里面『13分钟半』"}},[this._v("#")]),this._v(" 10.2.进一步补充ctors放在private里面『13分钟半』")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141254648.png",alt:"image-20210722141254648"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("私有化")]),this._v(" "),e("li",[this._v("我们继续上面的论题")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141337097.png",alt:"image-20210722141337097"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-3-进一步补充cout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-进一步补充cout"}},[this._v("#")]),this._v(" 10.3.进一步补充cout")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141402373.png",alt:"image-20210722141402373"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-4-进一步补充class-template"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-进一步补充class-template"}},[this._v("#")]),this._v(" 10.4.进一步补充class template")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141531721.png",alt:"image-20210722141531721"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-5-进一步补充function-template"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-进一步补充function-template"}},[this._v("#")]),this._v(" 10.5.进一步补充function template")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141611163.png",alt:"image-20210722141611163"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-6-进一步补充namespace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-6-进一步补充namespace"}},[this._v("#")]),this._v(" 10.6.进一步补充namespace")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141637856.png",alt:"image-20210722141637856"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("革命尚未成功")]),this._v(" "),e("li",[this._v("同志仍需努力")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141703881.png",alt:"image-20210722141703881"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"⏳11-组合-composition-与继承-inheritance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⏳11-组合-composition-与继承-inheritance"}},[this._v("#")]),this._v(" ⏳11.组合(Composition)与继承(Inheritance)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("Inheritance（继承）")])]),this._v(" "),e("li",[e("code",[this._v("Composition（复合）")])]),this._v(" "),e("li",[e("code",[this._v("Delegation（委托）")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141735891.png",alt:"image-20210722141735891"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_11-1-composition（复合）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-composition（复合）"}},[this._v("#")]),this._v(" 11.1.Composition（复合）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("表示has-a")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141806257.png",alt:"image-20210722141806257"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("下面是『适配器模式』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141835854.png",alt:"image-20210722141835613"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Composition（复合），表示has-a")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141921641.png",alt:"image-20210722141921641"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Composition（复合）关系下的构造和析构")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722141946953.png",alt:"image-20210722141946953"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_11-2-delegation（委托）-编程手法pimpl⭐️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-delegation（委托）-编程手法pimpl⭐️"}},[this._v("#")]),this._v(" 11.2.Delegation（委托）+编程手法pImpl⭐️")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Handle/Body（"),e("strong",[this._v("pImpl")]),this._v("）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722140652866.png",alt:"image-20210722140652866"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"⏳12-虚函数与多态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⏳12-虚函数与多态"}},[this._v("#")]),this._v(" ⏳12.虚函数与多态")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_12-1-inheritance（继承）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-inheritance（继承）"}},[this._v("#")]),this._v(" 12.1.Inheritance（继承）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("表示is-a")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722120020603.png",alt:"image-20210722120020603"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Inheritance（继承）关系下的构造和析构")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722120158547.png",alt:"image-20210722120158547"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_12-2-inheritance（继承）带有虚函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-inheritance（继承）带有虚函数"}},[this._v("#")]),this._v(" 12.2.Inheritance（继承）带有虚函数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722120239291.png",alt:"image-20210722120239291"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("虚函数『其他PPT』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722120324781.png",alt:"image-20210722120324781"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_12-3-template-method（模板方法）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-template-method（模板方法）"}},[this._v("#")]),this._v(" 12.3.Template Method（模板方法）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722120350572.png",alt:"image-20210722120350572"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("源代码")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722120418341.png",alt:"image-20210722120418341"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("源代码第2个PPT")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722140525675.png",alt:"image-20210722140525675"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_12-4-inheritance（继承）-composition（复合）关系下的构造和析构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-inheritance（继承）-composition（复合）关系下的构造和析构"}},[this._v("#")]),this._v(" 12.4.Inheritance（继承）+Composition（复合）关系下的构造和析构")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722140557393.png",alt:"image-20210722140557393"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『顺序要记忆』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722115547405.png",alt:"image-20210722115547405"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"⏳13-委托-delegation-相关设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⏳13-委托-delegation-相关设计"}},[this._v("#")]),this._v(" ⏳13.委托(Delegation)相关设计")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("委托和继承")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_13-1-inheritance（继承）-委托-delegation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-inheritance（继承）-委托-delegation"}},[this._v("#")]),this._v(" 13.1.Inheritance（继承）+委托(Delegation)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722114612912.png",alt:"image-20210722114612912"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『记忆』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722114746736.png",alt:"image-20210722114746736"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『PPT』源代码")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722114832031.png",alt:"image-20210722114832031"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『体系』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722114918779.png",alt:"image-20210722114918779"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_13-2-prototype（原型模式）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-prototype（原型模式）"}},[this._v("#")]),this._v(" 13.2.Prototype（原型模式）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722114955092.png",alt:"image-20210722114955092"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『记忆记忆』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722115035422.png",alt:"image-20210722115035422"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『记忆一下』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722115249951.png",alt:"image-20210722115249951"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("『记忆这个』")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210722115337016.png",alt:"image-20210722115337016"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("课程结束")])])}],!1,null,null,null);e.default=i.exports}}]);