(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{303:function(t,v,_){"use strict";_.r(v);var e=_(0),s=Object(e.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"vscode快捷键收集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vscode快捷键收集"}},[t._v("#")]),t._v(" VScode快捷键收集")]),t._v(" "),_("ul",[_("li",[t._v("用于解决可读性极差的代码「对于"),_("strong",[t._v("代码块")]),t._v("的光标移动："),_("code",[t._v("Ctrl+Shift+\\")]),t._v("」")])]),t._v(" "),_("h2",{attrs:{id:"_01讲学编辑器，到底应该学什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_01讲学编辑器，到底应该学什么"}},[t._v("#")]),t._v(" 01讲学编辑器，到底应该学什么")]),t._v(" "),_("ul",[_("li",[t._v("Shift 键能用于控制文本选择的")]),t._v(" "),_("li",[t._v("Ctrl 或者 Cmd 键能当做辅助键的")]),t._v(" "),_("li",[t._v("Tab 是用于 在控件之间跳转的……")]),t._v(" "),_("li",[t._v("也就是说，如果编辑器在选择快捷键的时候使用了某些规则，那么就要坚定地贯 彻下去，否则就会给用户带来困扰。")])]),t._v(" "),_("p",[t._v("VS Code 的做法是搭配组合辅助键 Ctrl、Alt 和 Meta 键，然后根据当前用户正在使用的组件来决定是 什么功能；Vim 则是运用了“模态”的概念，把输入文本信息，和光标移动、文本操作等分开为不同的模 态，不同模态各有一套自己的快捷键。大家都说 Vim 的学习曲线比较陡峭，一个很重要的原因就是“模 态”的概念实在是另辟蹊径。")]),t._v(" "),_("ul",[_("li",[t._v("meta键是mac上的，windows是win键")])]),t._v(" "),_("p",[_("strong",[t._v("VS code")]),t._v("的快捷键还是很符合使用习惯的，上手很快，也不与系统冲突。在我用过的IDE和编辑器中， 比较奇葩的快捷键设置应该"),_("strong",[t._v("是jetBrains系列IDE")]),t._v("：默认设置下，Ctrl＋Y键是删除行，而不是恢复上一步 操作；不熟悉的情况下就容易造成误删（幸好Ctrl＋Z是正常的），所以我觉得在快捷键设置上下功夫 确实很重要。 2018-09-13 01:49 作者回复 只要能够允许修改快捷键绑定，就还是可以的")]),t._v(" "),_("ul",[_("li",[t._v("右边编辑区选中文件时，左边的文件树会Focus到当前编辑的文件，无论是vscode还是基于vscode的 其它编辑器都这样！文件树这边跳来跳去展开文件夹带来烦恼，eclipse是可以做到的，vscode如何设 置？ 2018-09-14 07:54 作者回复 你需要的是 explorer.autoReveal")])]),t._v(" "),_("h2",{attrs:{id:"_02讲vscode的why、how和what"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_02讲vscode的why、how和what"}},[t._v("#")]),t._v(" 02讲VSCode的Why、How和What")]),t._v(" "),_("h3",{attrs:{id:"什么叫工作流？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么叫工作流？"}},[t._v("#")]),t._v(" 什么叫工作流？")]),t._v(" "),_("p",[t._v("首先，VS Code 的源代码以 "),_("strong",[t._v("MIT 协议")]),t._v("开源。这不仅意味着"),_("strong",[t._v("大家能够免费获取到 VS Code 的核心代 码")]),t._v("，更意味着社区能够基于 VS Code 的代码，开发自己的产品")]),t._v(" "),_("p",[t._v("VS Code 自带了 TypeScript 和 Node.js 的支持，用户下载 VS Code 后，立刻就能 file:///D/geekTime/html/02讲VSCode的Why、How和What.html[2018/12/20 0:07:48] 够在书写 JavaScript 和 TypeScript 时获得智能提示，而且无需任何配置即可立即调试 Node.js代 码。VS Code 核心团队有 Node.js 高手，TypeScript 也是微软官方出品的，VS Code 能把对这两个语 言的支持做好，似乎并不是什么值得惊讶的事情。但是 VS Code 团队不可能精通所有语言，对于他们 不熟悉的语言，VS Code 该怎么支持呢？")]),t._v(" "),_("h2",{attrs:{id:"_03讲如何快速上手-vscode"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_03讲如何快速上手-vscode"}},[t._v("#")]),t._v(" 03讲如何快速上手 VSCode?")]),t._v(" "),_("p",[t._v("VS Code 有两个不同的发布渠道：")]),t._v(" "),_("ul",[_("li",[t._v("一个是我们经常使用的稳定版（Stable），每个月发布一个主版本；")]),t._v(" "),_("li",[t._v("另外一个发布渠道叫做 Insiders，每周一到周五 UTC 时间早上6点从最新的代码发布一个版本，这也是 VS Code 团队在使用的版本，目标是可以第一时间用上自己新加的功能并及时发现问题。微软内部对 这个做法还有个专门的名词，叫做“吃自己的狗粮” (eat your own dog food)")])]),t._v(" "),_("h3",{attrs:{id:"命令面板"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命令面板"}},[t._v("#")]),t._v(" 命令面板")]),t._v(" "),_("p",[t._v("首先来看命令面板，它是 VS Code 快捷键的主要交互界面，你可以通过 F1 或者“Cmd+Shift+P\n”(Windows 上是 “Ctrl+Shift+P”) 打开。")]),t._v(" "),_("ul",[_("li",[t._v("如果你的 VS Code 是简体中文版，那么你可以在命令面 板里使用中文或者英文来搜索命令。VS Code 的绝大多数命令都可以在命令面板里搜到，所以"),_("strong",[t._v("熟练使 用命令面板，你就可以摆脱鼠标，完全通过键盘操作来完成全部编码工作")])])]),t._v(" "),_("h3",{attrs:{id:"快捷键"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#快捷键"}},[t._v("#")]),t._v(" 快捷键")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("文件资源管理器 Ctrl+ Shift+E")])]),t._v(" "),_("li",[_("p",[t._v("跨文件搜索 Ctrl+ Shift+F")])]),t._v(" "),_("li",[_("p",[t._v("源代码管理 Ctrl+ Shift+G")])]),t._v(" "),_("li",[_("p",[t._v("启动和调试Ctr1+ Shift+D")])]),t._v(" "),_("li",[_("p",[t._v("管理扩展Ctrl+ Shift+X")])])]),t._v(" "),_("p",[t._v("查找并运行所有命令Ctrl+Shift+P")]),t._v(" "),_("p",[t._v("查看错误和警告Ctrl+ Shift+M")]),t._v(" "),_("p",[t._v("如果你是 Windows用户，安装并重启系统后，你就可以在命令行中使用 "),_("strong",[t._v("code")]),t._v(" 或者 codeinsiders了，如果你希望立刻而不是等待重启后使用，可以将 VS Code 的安装目录添加到系统环境 变量 PATH中， Windows 64 位下的 VS Code 安装路径是 C:\\Program FIles\\Microsoft VS Code下。")]),t._v(" "),_("h2",{attrs:{id:"_04讲如何做到双手不离键盘"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_04讲如何做到双手不离键盘"}},[t._v("#")]),t._v(" 04讲如何做到双手不离键盘")]),t._v(" "),_("ul",[_("li",[t._v("针对单词的光标移动。Ctrl+左边或者右边。。你同时按住 Option 和方向键，那么光标移动的颗粒度就变成了单词")]),t._v(" "),_("li",[t._v("把光标移动到行首或者行末：win+Home/End 键")]),t._v(" "),_("li",[t._v("对于"),_("strong",[t._v("代码块")]),t._v("的光标移动：Ctrl+Shift+\\")]),t._v(" "),_("li",[t._v("是移动到文档的第一行或者最后一行：Ctrl + Home/End 键")])]),t._v(" "),_("p",[t._v("掌握了上面的快捷键之后，你还可以非常轻松地掌握文本选择的操作。因为对于基于单词、行 和整个文档的光标操作，你只需要多按一个 Shift 键，就可以在移动光标的同时选中其中的文 本。")]),t._v(" "),_("p",[t._v("shift+Ctrl+Left或者Right。：光标到 function 单词开头之间的所有字符全部选中")]),t._v(" "),_("p",[t._v("代码块的文本选择， VS Code 默认没有绑定快捷键：")]),t._v(" "),_("blockquote",[_("p",[t._v(". 删除操作")])]),t._v(" "),_("ul",[_("li",[t._v("比如你想把当前行中光标之前的文本全部删除，就可以先选中这段文本（Windows/Linux: Home + Shift，macOS: Cmd + Left + Shift )，然后再按删除键")]),t._v(" "),_("li",[t._v("假设你把光标放在第二行代码的中间位置，然后按下 Cmd 和 Backspace（MacOS上就是 “fn + delete”的组合，Windows 上未绑定快捷键，可以打开命令面板运行“删除右侧所有 内容”），就能够把第二行代码光标后（右侧）的字符全部删掉")])]),t._v(" "),_("h2",{attrs:{id:"参考资料"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),_("ul",[_("li",[t._v("极客时间，玩转VS Code")])])])}],!1,null,null,null);v.default=s.exports}}]);